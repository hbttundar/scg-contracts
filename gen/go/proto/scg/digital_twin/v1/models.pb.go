// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/scg/digital_twin/v1/models.proto

package digitaltwinv1

import (
	v1 "github.com/next-trace/scg-contracts/gen/go/proto/scg/shared/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DigitalTwin struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	DigitalTwinUuid string                 `protobuf:"bytes,1,opt,name=digital_twin_uuid,proto3" json:"digital_twin_uuid,omitempty"`
	UnitUuid        string                 `protobuf:"bytes,2,opt,name=unit_uuid,proto3" json:"unit_uuid,omitempty"`
	ModelType       DigitalTwinModelType   `protobuf:"varint,3,opt,name=model_type,proto3,enum=proto.scg.digital_twin.v1.DigitalTwinModelType" json:"model_type,omitempty"`
	Status          string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"` // active, archived, obsolete, etc.
	Metadata        map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DigitalTwin) Reset() {
	*x = DigitalTwin{}
	mi := &file_proto_scg_digital_twin_v1_models_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DigitalTwin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigitalTwin) ProtoMessage() {}

func (x *DigitalTwin) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_digital_twin_v1_models_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigitalTwin.ProtoReflect.Descriptor instead.
func (*DigitalTwin) Descriptor() ([]byte, []int) {
	return file_proto_scg_digital_twin_v1_models_proto_rawDescGZIP(), []int{0}
}

func (x *DigitalTwin) GetDigitalTwinUuid() string {
	if x != nil {
		return x.DigitalTwinUuid
	}
	return ""
}

func (x *DigitalTwin) GetUnitUuid() string {
	if x != nil {
		return x.UnitUuid
	}
	return ""
}

func (x *DigitalTwin) GetModelType() DigitalTwinModelType {
	if x != nil {
		return x.ModelType
	}
	return DigitalTwinModelType_DIGITAL_TWIN_MODEL_TYPE_UNSPECIFIED
}

func (x *DigitalTwin) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DigitalTwin) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type DigitalTwinSensorData struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	DigitalTwinUuid string                 `protobuf:"bytes,1,opt,name=digital_twin_uuid,proto3" json:"digital_twin_uuid,omitempty"`
	SensorType      string                 `protobuf:"bytes,2,opt,name=sensor_type,proto3" json:"sensor_type,omitempty"`
	PayloadJson     string                 `protobuf:"bytes,3,opt,name=payload_json,proto3" json:"payload_json,omitempty"`
	Source          string                 `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	Uuid            string                 `protobuf:"bytes,5,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Meta            *v1.EventEnvelope      `protobuf:"bytes,6,opt,name=meta,proto3" json:"meta,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DigitalTwinSensorData) Reset() {
	*x = DigitalTwinSensorData{}
	mi := &file_proto_scg_digital_twin_v1_models_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DigitalTwinSensorData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigitalTwinSensorData) ProtoMessage() {}

func (x *DigitalTwinSensorData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_digital_twin_v1_models_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigitalTwinSensorData.ProtoReflect.Descriptor instead.
func (*DigitalTwinSensorData) Descriptor() ([]byte, []int) {
	return file_proto_scg_digital_twin_v1_models_proto_rawDescGZIP(), []int{1}
}

func (x *DigitalTwinSensorData) GetDigitalTwinUuid() string {
	if x != nil {
		return x.DigitalTwinUuid
	}
	return ""
}

func (x *DigitalTwinSensorData) GetSensorType() string {
	if x != nil {
		return x.SensorType
	}
	return ""
}

func (x *DigitalTwinSensorData) GetPayloadJson() string {
	if x != nil {
		return x.PayloadJson
	}
	return ""
}

func (x *DigitalTwinSensorData) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *DigitalTwinSensorData) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *DigitalTwinSensorData) GetMeta() *v1.EventEnvelope {
	if x != nil {
		return x.Meta
	}
	return nil
}

var File_proto_scg_digital_twin_v1_models_proto protoreflect.FileDescriptor

const file_proto_scg_digital_twin_v1_models_proto_rawDesc = "" +
	"\n" +
	"&proto/scg/digital_twin/v1/models.proto\x12\x19proto.scg.digital_twin.v1\x1a proto/scg/shared/v1/events.proto\x1a%proto/scg/digital_twin/v1/enums.proto\"\xd1\x02\n" +
	"\vDigitalTwin\x12,\n" +
	"\x11digital_twin_uuid\x18\x01 \x01(\tR\x11digital_twin_uuid\x12\x1c\n" +
	"\tunit_uuid\x18\x02 \x01(\tR\tunit_uuid\x12O\n" +
	"\n" +
	"model_type\x18\x03 \x01(\x0e2/.proto.scg.digital_twin.v1.DigitalTwinModelTypeR\n" +
	"model_type\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12P\n" +
	"\bmetadata\x18\x05 \x03(\v24.proto.scg.digital_twin.v1.DigitalTwin.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xef\x01\n" +
	"\x15DigitalTwinSensorData\x12,\n" +
	"\x11digital_twin_uuid\x18\x01 \x01(\tR\x11digital_twin_uuid\x12 \n" +
	"\vsensor_type\x18\x02 \x01(\tR\vsensor_type\x12\"\n" +
	"\fpayload_json\x18\x03 \x01(\tR\fpayload_json\x12\x16\n" +
	"\x06source\x18\x04 \x01(\tR\x06source\x12\x12\n" +
	"\x04uuid\x18\x05 \x01(\tR\x04uuid\x126\n" +
	"\x04meta\x18\x06 \x01(\v2\".proto.scg.shared.v1.EventEnvelopeR\x04metaB\x83\x02\n" +
	"\x1dcom.proto.scg.digital_twin.v1B\vModelsProtoP\x01ZRgithub.com/next-trace/scg-contracts/gen/go/proto/scg/digital_twin/v1;digitaltwinv1\xa2\x02\x03PSD\xaa\x02\x18Proto.Scg.DigitalTwin.V1\xca\x02\x18Proto\\Scg\\DigitalTwin\\V1\xe2\x02$Proto\\Scg\\DigitalTwin\\V1\\GPBMetadata\xea\x02\x1bProto::Scg::DigitalTwin::V1b\x06proto3"

var (
	file_proto_scg_digital_twin_v1_models_proto_rawDescOnce sync.Once
	file_proto_scg_digital_twin_v1_models_proto_rawDescData []byte
)

func file_proto_scg_digital_twin_v1_models_proto_rawDescGZIP() []byte {
	file_proto_scg_digital_twin_v1_models_proto_rawDescOnce.Do(func() {
		file_proto_scg_digital_twin_v1_models_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_scg_digital_twin_v1_models_proto_rawDesc), len(file_proto_scg_digital_twin_v1_models_proto_rawDesc)))
	})
	return file_proto_scg_digital_twin_v1_models_proto_rawDescData
}

var file_proto_scg_digital_twin_v1_models_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_scg_digital_twin_v1_models_proto_goTypes = []any{
	(*DigitalTwin)(nil),           // 0: proto.scg.digital_twin.v1.DigitalTwin
	(*DigitalTwinSensorData)(nil), // 1: proto.scg.digital_twin.v1.DigitalTwinSensorData
	nil,                           // 2: proto.scg.digital_twin.v1.DigitalTwin.MetadataEntry
	(DigitalTwinModelType)(0),     // 3: proto.scg.digital_twin.v1.DigitalTwinModelType
	(*v1.EventEnvelope)(nil),      // 4: proto.scg.shared.v1.EventEnvelope
}
var file_proto_scg_digital_twin_v1_models_proto_depIdxs = []int32{
	3, // 0: proto.scg.digital_twin.v1.DigitalTwin.model_type:type_name -> proto.scg.digital_twin.v1.DigitalTwinModelType
	2, // 1: proto.scg.digital_twin.v1.DigitalTwin.metadata:type_name -> proto.scg.digital_twin.v1.DigitalTwin.MetadataEntry
	4, // 2: proto.scg.digital_twin.v1.DigitalTwinSensorData.meta:type_name -> proto.scg.shared.v1.EventEnvelope
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_scg_digital_twin_v1_models_proto_init() }
func file_proto_scg_digital_twin_v1_models_proto_init() {
	if File_proto_scg_digital_twin_v1_models_proto != nil {
		return
	}
	file_proto_scg_digital_twin_v1_enums_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_scg_digital_twin_v1_models_proto_rawDesc), len(file_proto_scg_digital_twin_v1_models_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_scg_digital_twin_v1_models_proto_goTypes,
		DependencyIndexes: file_proto_scg_digital_twin_v1_models_proto_depIdxs,
		MessageInfos:      file_proto_scg_digital_twin_v1_models_proto_msgTypes,
	}.Build()
	File_proto_scg_digital_twin_v1_models_proto = out.File
	file_proto_scg_digital_twin_v1_models_proto_goTypes = nil
	file_proto_scg_digital_twin_v1_models_proto_depIdxs = nil
}
