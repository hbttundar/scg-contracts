// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/scg/risk/v1/models.proto

package riskv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Risk represents a supply chain risk
type Risk struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Uuid        string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Category    RiskCategory           `protobuf:"varint,4,opt,name=category,proto3,enum=proto.scg.risk.v1.RiskCategory" json:"category,omitempty"`
	Severity    RiskSeverity           `protobuf:"varint,5,opt,name=severity,proto3,enum=proto.scg.risk.v1.RiskSeverity" json:"severity,omitempty"`
	Probability RiskProbability        `protobuf:"varint,6,opt,name=probability,proto3,enum=proto.scg.risk.v1.RiskProbability" json:"probability,omitempty"`
	Status      RiskStatus             `protobuf:"varint,7,opt,name=status,proto3,enum=proto.scg.risk.v1.RiskStatus" json:"status,omitempty"`
	ImpactTypes []RiskImpactType       `protobuf:"varint,8,rep,packed,name=impact_types,proto3,enum=proto.scg.risk.v1.RiskImpactType" json:"impact_types,omitempty"`
	// The entity this risk is associated with (could be a partner, consignment, unit, etc.)
	EntityType string `protobuf:"bytes,9,opt,name=entity_type,proto3" json:"entity_type,omitempty"` // "partner", "consignment", "unit", etc.
	EntityUuid string `protobuf:"bytes,10,opt,name=entity_uuid,proto3" json:"entity_uuid,omitempty"`
	// Risk scoring
	RiskScore        float64              `protobuf:"fixed64,11,opt,name=risk_score,proto3" json:"risk_score,omitempty"` // Calculated risk score (severity * probability)
	AssessmentMethod RiskAssessmentMethod `protobuf:"varint,12,opt,name=assessment_method,proto3,enum=proto.scg.risk.v1.RiskAssessmentMethod" json:"assessment_method,omitempty"`
	// Ownership and tracking
	OwnerUuid      string                 `protobuf:"bytes,13,opt,name=owner_uuid,proto3" json:"owner_uuid,omitempty"` // User responsible for managing this risk
	IdentifiedAt   *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=identified_at,proto3" json:"identified_at,omitempty"`
	LastAssessedAt *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=last_assessed_at,proto3" json:"last_assessed_at,omitempty"`
	NextReviewDate *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=next_review_date,proto3" json:"next_review_date,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=created_at,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=updated_at,proto3" json:"updated_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Risk) Reset() {
	*x = Risk{}
	mi := &file_proto_scg_risk_v1_models_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Risk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Risk) ProtoMessage() {}

func (x *Risk) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_models_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Risk.ProtoReflect.Descriptor instead.
func (*Risk) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_models_proto_rawDescGZIP(), []int{0}
}

func (x *Risk) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Risk) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Risk) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Risk) GetCategory() RiskCategory {
	if x != nil {
		return x.Category
	}
	return RiskCategory_RISK_CATEGORY_UNSPECIFIED
}

func (x *Risk) GetSeverity() RiskSeverity {
	if x != nil {
		return x.Severity
	}
	return RiskSeverity_RISK_SEVERITY_UNSPECIFIED
}

func (x *Risk) GetProbability() RiskProbability {
	if x != nil {
		return x.Probability
	}
	return RiskProbability_RISK_PROBABILITY_UNSPECIFIED
}

func (x *Risk) GetStatus() RiskStatus {
	if x != nil {
		return x.Status
	}
	return RiskStatus_RISK_STATUS_UNSPECIFIED
}

func (x *Risk) GetImpactTypes() []RiskImpactType {
	if x != nil {
		return x.ImpactTypes
	}
	return nil
}

func (x *Risk) GetEntityType() string {
	if x != nil {
		return x.EntityType
	}
	return ""
}

func (x *Risk) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *Risk) GetRiskScore() float64 {
	if x != nil {
		return x.RiskScore
	}
	return 0
}

func (x *Risk) GetAssessmentMethod() RiskAssessmentMethod {
	if x != nil {
		return x.AssessmentMethod
	}
	return RiskAssessmentMethod_RISK_ASSESSMENT_METHOD_UNSPECIFIED
}

func (x *Risk) GetOwnerUuid() string {
	if x != nil {
		return x.OwnerUuid
	}
	return ""
}

func (x *Risk) GetIdentifiedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.IdentifiedAt
	}
	return nil
}

func (x *Risk) GetLastAssessedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastAssessedAt
	}
	return nil
}

func (x *Risk) GetNextReviewDate() *timestamppb.Timestamp {
	if x != nil {
		return x.NextReviewDate
	}
	return nil
}

func (x *Risk) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Risk) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// RiskMitigationPlan represents a plan to mitigate a risk
type RiskMitigationPlan struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Uuid        string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	RiskUuid    string                 `protobuf:"bytes,2,opt,name=risk_uuid,proto3" json:"risk_uuid,omitempty"`
	Name        string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Status      MitigationStatus       `protobuf:"varint,5,opt,name=status,proto3,enum=proto.scg.risk.v1.MitigationStatus" json:"status,omitempty"`
	// Timeline
	StartDate            *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=start_date,proto3" json:"start_date,omitempty"`
	TargetCompletionDate *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=target_completion_date,proto3" json:"target_completion_date,omitempty"`
	ActualCompletionDate *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=actual_completion_date,proto3" json:"actual_completion_date,omitempty"`
	// Ownership and tracking
	OwnerUuid            string                  `protobuf:"bytes,9,opt,name=owner_uuid,proto3" json:"owner_uuid,omitempty"`
	StakeholderUuids     []string                `protobuf:"bytes,10,rep,name=stakeholder_uuids,proto3" json:"stakeholder_uuids,omitempty"`
	EstimatedCost        float64                 `protobuf:"fixed64,11,opt,name=estimated_cost,proto3" json:"estimated_cost,omitempty"`
	CostCurrency         string                  `protobuf:"bytes,12,opt,name=cost_currency,proto3" json:"cost_currency,omitempty"`
	CompletionPercentage int32                   `protobuf:"varint,13,opt,name=completion_percentage,proto3" json:"completion_percentage,omitempty"`
	Actions              []*RiskMitigationAction `protobuf:"bytes,14,rep,name=actions,proto3" json:"actions,omitempty"`
	CreatedAt            *timestamppb.Timestamp  `protobuf:"bytes,15,opt,name=created_at,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamppb.Timestamp  `protobuf:"bytes,16,opt,name=updated_at,proto3" json:"updated_at,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *RiskMitigationPlan) Reset() {
	*x = RiskMitigationPlan{}
	mi := &file_proto_scg_risk_v1_models_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskMitigationPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskMitigationPlan) ProtoMessage() {}

func (x *RiskMitigationPlan) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_models_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskMitigationPlan.ProtoReflect.Descriptor instead.
func (*RiskMitigationPlan) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_models_proto_rawDescGZIP(), []int{1}
}

func (x *RiskMitigationPlan) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *RiskMitigationPlan) GetRiskUuid() string {
	if x != nil {
		return x.RiskUuid
	}
	return ""
}

func (x *RiskMitigationPlan) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RiskMitigationPlan) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RiskMitigationPlan) GetStatus() MitigationStatus {
	if x != nil {
		return x.Status
	}
	return MitigationStatus_MITIGATION_STATUS_UNSPECIFIED
}

func (x *RiskMitigationPlan) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *RiskMitigationPlan) GetTargetCompletionDate() *timestamppb.Timestamp {
	if x != nil {
		return x.TargetCompletionDate
	}
	return nil
}

func (x *RiskMitigationPlan) GetActualCompletionDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ActualCompletionDate
	}
	return nil
}

func (x *RiskMitigationPlan) GetOwnerUuid() string {
	if x != nil {
		return x.OwnerUuid
	}
	return ""
}

func (x *RiskMitigationPlan) GetStakeholderUuids() []string {
	if x != nil {
		return x.StakeholderUuids
	}
	return nil
}

func (x *RiskMitigationPlan) GetEstimatedCost() float64 {
	if x != nil {
		return x.EstimatedCost
	}
	return 0
}

func (x *RiskMitigationPlan) GetCostCurrency() string {
	if x != nil {
		return x.CostCurrency
	}
	return ""
}

func (x *RiskMitigationPlan) GetCompletionPercentage() int32 {
	if x != nil {
		return x.CompletionPercentage
	}
	return 0
}

func (x *RiskMitigationPlan) GetActions() []*RiskMitigationAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *RiskMitigationPlan) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *RiskMitigationPlan) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// RiskMitigationAction represents a specific action within a risk mitigation plan
type RiskMitigationAction struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Uuid               string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	MitigationPlanUuid string                 `protobuf:"bytes,2,opt,name=mitigation_plan_uuid,proto3" json:"mitigation_plan_uuid,omitempty"`
	Description        string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Status             string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"` // "pending", "in_progress", "completed", "blocked"
	OwnerUuid          string                 `protobuf:"bytes,5,opt,name=owner_uuid,proto3" json:"owner_uuid,omitempty"`
	DueDate            *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=due_date,proto3" json:"due_date,omitempty"`
	CompletedAt        *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=completed_at,proto3" json:"completed_at,omitempty"`
	Notes              string                 `protobuf:"bytes,8,opt,name=notes,proto3" json:"notes,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,proto3" json:"created_at,omitempty"`
	UpdatedAt          *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,proto3" json:"updated_at,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *RiskMitigationAction) Reset() {
	*x = RiskMitigationAction{}
	mi := &file_proto_scg_risk_v1_models_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskMitigationAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskMitigationAction) ProtoMessage() {}

func (x *RiskMitigationAction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_models_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskMitigationAction.ProtoReflect.Descriptor instead.
func (*RiskMitigationAction) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_models_proto_rawDescGZIP(), []int{2}
}

func (x *RiskMitigationAction) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *RiskMitigationAction) GetMitigationPlanUuid() string {
	if x != nil {
		return x.MitigationPlanUuid
	}
	return ""
}

func (x *RiskMitigationAction) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RiskMitigationAction) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RiskMitigationAction) GetOwnerUuid() string {
	if x != nil {
		return x.OwnerUuid
	}
	return ""
}

func (x *RiskMitigationAction) GetDueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DueDate
	}
	return nil
}

func (x *RiskMitigationAction) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *RiskMitigationAction) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *RiskMitigationAction) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *RiskMitigationAction) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// RiskIncident represents a materialized risk that has become an incident
type RiskIncident struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Uuid              string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	RiskUuid          string                 `protobuf:"bytes,2,opt,name=risk_uuid,proto3" json:"risk_uuid,omitempty"` // Reference to the original risk
	Title             string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description       string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	ActualSeverity    RiskSeverity           `protobuf:"varint,5,opt,name=actual_severity,proto3,enum=proto.scg.risk.v1.RiskSeverity" json:"actual_severity,omitempty"`
	ActualImpactTypes []RiskImpactType       `protobuf:"varint,6,rep,packed,name=actual_impact_types,proto3,enum=proto.scg.risk.v1.RiskImpactType" json:"actual_impact_types,omitempty"`
	// Impact details
	ImpactDescription       string  `protobuf:"bytes,7,opt,name=impact_description,proto3" json:"impact_description,omitempty"`
	FinancialImpact         float64 `protobuf:"fixed64,8,opt,name=financial_impact,proto3" json:"financial_impact,omitempty"`
	FinancialImpactCurrency string  `protobuf:"bytes,9,opt,name=financial_impact_currency,proto3" json:"financial_impact_currency,omitempty"`
	// Timeline
	OccurredAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=occurred_at,proto3" json:"occurred_at,omitempty"`
	DetectedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=detected_at,proto3" json:"detected_at,omitempty"`
	ResolvedAt *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=resolved_at,proto3" json:"resolved_at,omitempty"`
	// Status and tracking
	Status              string                 `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"` // "active", "investigating", "mitigating", "resolved", "closed"
	OwnerUuid           string                 `protobuf:"bytes,14,opt,name=owner_uuid,proto3" json:"owner_uuid,omitempty"`
	AffectedEntityUuids []string               `protobuf:"bytes,15,rep,name=affected_entity_uuids,proto3" json:"affected_entity_uuids,omitempty"`
	ResolutionSummary   string                 `protobuf:"bytes,16,opt,name=resolution_summary,proto3" json:"resolution_summary,omitempty"`
	LessonsLearned      string                 `protobuf:"bytes,17,opt,name=lessons_learned,proto3" json:"lessons_learned,omitempty"`
	CreatedAt           *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=created_at,proto3" json:"created_at,omitempty"`
	UpdatedAt           *timestamppb.Timestamp `protobuf:"bytes,19,opt,name=updated_at,proto3" json:"updated_at,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *RiskIncident) Reset() {
	*x = RiskIncident{}
	mi := &file_proto_scg_risk_v1_models_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskIncident) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskIncident) ProtoMessage() {}

func (x *RiskIncident) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_models_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskIncident.ProtoReflect.Descriptor instead.
func (*RiskIncident) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_models_proto_rawDescGZIP(), []int{3}
}

func (x *RiskIncident) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *RiskIncident) GetRiskUuid() string {
	if x != nil {
		return x.RiskUuid
	}
	return ""
}

func (x *RiskIncident) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RiskIncident) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RiskIncident) GetActualSeverity() RiskSeverity {
	if x != nil {
		return x.ActualSeverity
	}
	return RiskSeverity_RISK_SEVERITY_UNSPECIFIED
}

func (x *RiskIncident) GetActualImpactTypes() []RiskImpactType {
	if x != nil {
		return x.ActualImpactTypes
	}
	return nil
}

func (x *RiskIncident) GetImpactDescription() string {
	if x != nil {
		return x.ImpactDescription
	}
	return ""
}

func (x *RiskIncident) GetFinancialImpact() float64 {
	if x != nil {
		return x.FinancialImpact
	}
	return 0
}

func (x *RiskIncident) GetFinancialImpactCurrency() string {
	if x != nil {
		return x.FinancialImpactCurrency
	}
	return ""
}

func (x *RiskIncident) GetOccurredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.OccurredAt
	}
	return nil
}

func (x *RiskIncident) GetDetectedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DetectedAt
	}
	return nil
}

func (x *RiskIncident) GetResolvedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ResolvedAt
	}
	return nil
}

func (x *RiskIncident) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RiskIncident) GetOwnerUuid() string {
	if x != nil {
		return x.OwnerUuid
	}
	return ""
}

func (x *RiskIncident) GetAffectedEntityUuids() []string {
	if x != nil {
		return x.AffectedEntityUuids
	}
	return nil
}

func (x *RiskIncident) GetResolutionSummary() string {
	if x != nil {
		return x.ResolutionSummary
	}
	return ""
}

func (x *RiskIncident) GetLessonsLearned() string {
	if x != nil {
		return x.LessonsLearned
	}
	return ""
}

func (x *RiskIncident) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *RiskIncident) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// RiskAssessment represents a formal assessment of risks
type RiskAssessment struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Uuid        string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Method      RiskAssessmentMethod   `protobuf:"varint,4,opt,name=method,proto3,enum=proto.scg.risk.v1.RiskAssessmentMethod" json:"method,omitempty"`
	// Scope
	ScopeType string `protobuf:"bytes,5,opt,name=scope_type,proto3" json:"scope_type,omitempty"` // "partner", "region", "product_line", "global"
	ScopeUuid string `protobuf:"bytes,6,opt,name=scope_uuid,proto3" json:"scope_uuid,omitempty"` // UUID of the entity being assessed, if applicable
	// Timeline
	AssessmentDate     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=assessment_date,proto3" json:"assessment_date,omitempty"`
	NextAssessmentDate *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=next_assessment_date,proto3" json:"next_assessment_date,omitempty"`
	// Results
	IdentifiedRiskUuids []string `protobuf:"bytes,9,rep,name=identified_risk_uuids,proto3" json:"identified_risk_uuids,omitempty"`
	Summary             string   `protobuf:"bytes,10,opt,name=summary,proto3" json:"summary,omitempty"`
	Recommendations     string   `protobuf:"bytes,11,opt,name=recommendations,proto3" json:"recommendations,omitempty"`
	// Ownership and tracking
	ConductedBy   string                 `protobuf:"bytes,12,opt,name=conducted_by,proto3" json:"conducted_by,omitempty"` // User UUID
	ApprovedBy    string                 `protobuf:"bytes,13,opt,name=approved_by,proto3" json:"approved_by,omitempty"`   // User UUID
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=created_at,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=updated_at,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RiskAssessment) Reset() {
	*x = RiskAssessment{}
	mi := &file_proto_scg_risk_v1_models_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskAssessment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskAssessment) ProtoMessage() {}

func (x *RiskAssessment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_models_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskAssessment.ProtoReflect.Descriptor instead.
func (*RiskAssessment) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_models_proto_rawDescGZIP(), []int{4}
}

func (x *RiskAssessment) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *RiskAssessment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RiskAssessment) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RiskAssessment) GetMethod() RiskAssessmentMethod {
	if x != nil {
		return x.Method
	}
	return RiskAssessmentMethod_RISK_ASSESSMENT_METHOD_UNSPECIFIED
}

func (x *RiskAssessment) GetScopeType() string {
	if x != nil {
		return x.ScopeType
	}
	return ""
}

func (x *RiskAssessment) GetScopeUuid() string {
	if x != nil {
		return x.ScopeUuid
	}
	return ""
}

func (x *RiskAssessment) GetAssessmentDate() *timestamppb.Timestamp {
	if x != nil {
		return x.AssessmentDate
	}
	return nil
}

func (x *RiskAssessment) GetNextAssessmentDate() *timestamppb.Timestamp {
	if x != nil {
		return x.NextAssessmentDate
	}
	return nil
}

func (x *RiskAssessment) GetIdentifiedRiskUuids() []string {
	if x != nil {
		return x.IdentifiedRiskUuids
	}
	return nil
}

func (x *RiskAssessment) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *RiskAssessment) GetRecommendations() string {
	if x != nil {
		return x.Recommendations
	}
	return ""
}

func (x *RiskAssessment) GetConductedBy() string {
	if x != nil {
		return x.ConductedBy
	}
	return ""
}

func (x *RiskAssessment) GetApprovedBy() string {
	if x != nil {
		return x.ApprovedBy
	}
	return ""
}

func (x *RiskAssessment) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *RiskAssessment) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// RiskMonitoringRule represents a rule for monitoring risks
type RiskMonitoringRule struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Uuid        string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Rule criteria
	Category       RiskCategory    `protobuf:"varint,4,opt,name=category,proto3,enum=proto.scg.risk.v1.RiskCategory" json:"category,omitempty"`
	MinSeverity    RiskSeverity    `protobuf:"varint,5,opt,name=min_severity,proto3,enum=proto.scg.risk.v1.RiskSeverity" json:"min_severity,omitempty"`
	MinProbability RiskProbability `protobuf:"varint,6,opt,name=min_probability,proto3,enum=proto.scg.risk.v1.RiskProbability" json:"min_probability,omitempty"`
	MinRiskScore   float64         `protobuf:"fixed64,7,opt,name=min_risk_score,proto3" json:"min_risk_score,omitempty"`
	// Monitoring parameters
	MonitoringFrequencyDays int32 `protobuf:"varint,8,opt,name=monitoring_frequency_days,proto3" json:"monitoring_frequency_days,omitempty"` // How often to check
	Active                  bool  `protobuf:"varint,9,opt,name=active,proto3" json:"active,omitempty"`
	// Actions
	AutoEscalate               bool                   `protobuf:"varint,10,opt,name=auto_escalate,proto3" json:"auto_escalate,omitempty"`
	NotificationRecipientUuids []string               `protobuf:"bytes,11,rep,name=notification_recipient_uuids,proto3" json:"notification_recipient_uuids,omitempty"`
	CreatedAt                  *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=created_at,proto3" json:"created_at,omitempty"`
	UpdatedAt                  *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=updated_at,proto3" json:"updated_at,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *RiskMonitoringRule) Reset() {
	*x = RiskMonitoringRule{}
	mi := &file_proto_scg_risk_v1_models_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskMonitoringRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskMonitoringRule) ProtoMessage() {}

func (x *RiskMonitoringRule) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_models_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskMonitoringRule.ProtoReflect.Descriptor instead.
func (*RiskMonitoringRule) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_models_proto_rawDescGZIP(), []int{5}
}

func (x *RiskMonitoringRule) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *RiskMonitoringRule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RiskMonitoringRule) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RiskMonitoringRule) GetCategory() RiskCategory {
	if x != nil {
		return x.Category
	}
	return RiskCategory_RISK_CATEGORY_UNSPECIFIED
}

func (x *RiskMonitoringRule) GetMinSeverity() RiskSeverity {
	if x != nil {
		return x.MinSeverity
	}
	return RiskSeverity_RISK_SEVERITY_UNSPECIFIED
}

func (x *RiskMonitoringRule) GetMinProbability() RiskProbability {
	if x != nil {
		return x.MinProbability
	}
	return RiskProbability_RISK_PROBABILITY_UNSPECIFIED
}

func (x *RiskMonitoringRule) GetMinRiskScore() float64 {
	if x != nil {
		return x.MinRiskScore
	}
	return 0
}

func (x *RiskMonitoringRule) GetMonitoringFrequencyDays() int32 {
	if x != nil {
		return x.MonitoringFrequencyDays
	}
	return 0
}

func (x *RiskMonitoringRule) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *RiskMonitoringRule) GetAutoEscalate() bool {
	if x != nil {
		return x.AutoEscalate
	}
	return false
}

func (x *RiskMonitoringRule) GetNotificationRecipientUuids() []string {
	if x != nil {
		return x.NotificationRecipientUuids
	}
	return nil
}

func (x *RiskMonitoringRule) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *RiskMonitoringRule) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// RiskKPI represents a Key Performance Indicator for risk management
type RiskKPI struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Uuid            string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description     string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	MetricType      string                 `protobuf:"bytes,4,opt,name=metric_type,proto3" json:"metric_type,omitempty"` // "count", "percentage", "score", etc.
	TargetValue     float64                `protobuf:"fixed64,5,opt,name=target_value,proto3" json:"target_value,omitempty"`
	CurrentValue    float64                `protobuf:"fixed64,6,opt,name=current_value,proto3" json:"current_value,omitempty"`
	PreviousValue   float64                `protobuf:"fixed64,7,opt,name=previous_value,proto3" json:"previous_value,omitempty"`
	MeasurementDate *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=measurement_date,proto3" json:"measurement_date,omitempty"`
	Status          string                 `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"` // "on_target", "at_risk", "off_target"
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,proto3" json:"created_at,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,proto3" json:"updated_at,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RiskKPI) Reset() {
	*x = RiskKPI{}
	mi := &file_proto_scg_risk_v1_models_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskKPI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskKPI) ProtoMessage() {}

func (x *RiskKPI) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_models_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskKPI.ProtoReflect.Descriptor instead.
func (*RiskKPI) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_models_proto_rawDescGZIP(), []int{6}
}

func (x *RiskKPI) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *RiskKPI) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RiskKPI) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RiskKPI) GetMetricType() string {
	if x != nil {
		return x.MetricType
	}
	return ""
}

func (x *RiskKPI) GetTargetValue() float64 {
	if x != nil {
		return x.TargetValue
	}
	return 0
}

func (x *RiskKPI) GetCurrentValue() float64 {
	if x != nil {
		return x.CurrentValue
	}
	return 0
}

func (x *RiskKPI) GetPreviousValue() float64 {
	if x != nil {
		return x.PreviousValue
	}
	return 0
}

func (x *RiskKPI) GetMeasurementDate() *timestamppb.Timestamp {
	if x != nil {
		return x.MeasurementDate
	}
	return nil
}

func (x *RiskKPI) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RiskKPI) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *RiskKPI) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_proto_scg_risk_v1_models_proto protoreflect.FileDescriptor

const file_proto_scg_risk_v1_models_proto_rawDesc = "" +
	"\n" +
	"\x1eproto/scg/risk/v1/models.proto\x12\x11proto.scg.risk.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1dproto/scg/risk/v1/enums.proto\"\xb3\a\n" +
	"\x04Risk\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12;\n" +
	"\bcategory\x18\x04 \x01(\x0e2\x1f.proto.scg.risk.v1.RiskCategoryR\bcategory\x12;\n" +
	"\bseverity\x18\x05 \x01(\x0e2\x1f.proto.scg.risk.v1.RiskSeverityR\bseverity\x12D\n" +
	"\vprobability\x18\x06 \x01(\x0e2\".proto.scg.risk.v1.RiskProbabilityR\vprobability\x125\n" +
	"\x06status\x18\a \x01(\x0e2\x1d.proto.scg.risk.v1.RiskStatusR\x06status\x12E\n" +
	"\fimpact_types\x18\b \x03(\x0e2!.proto.scg.risk.v1.RiskImpactTypeR\fimpact_types\x12 \n" +
	"\ventity_type\x18\t \x01(\tR\ventity_type\x12 \n" +
	"\ventity_uuid\x18\n" +
	" \x01(\tR\ventity_uuid\x12\x1e\n" +
	"\n" +
	"risk_score\x18\v \x01(\x01R\n" +
	"risk_score\x12U\n" +
	"\x11assessment_method\x18\f \x01(\x0e2'.proto.scg.risk.v1.RiskAssessmentMethodR\x11assessment_method\x12\x1e\n" +
	"\n" +
	"owner_uuid\x18\r \x01(\tR\n" +
	"owner_uuid\x12@\n" +
	"\ridentified_at\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\ridentified_at\x12F\n" +
	"\x10last_assessed_at\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\x10last_assessed_at\x12F\n" +
	"\x10next_review_date\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\x10next_review_date\x12:\n" +
	"\n" +
	"created_at\x18\x11 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"created_at\x12:\n" +
	"\n" +
	"updated_at\x18\x12 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"updated_at\"\xaa\x06\n" +
	"\x12RiskMitigationPlan\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12\x1c\n" +
	"\trisk_uuid\x18\x02 \x01(\tR\trisk_uuid\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12;\n" +
	"\x06status\x18\x05 \x01(\x0e2#.proto.scg.risk.v1.MitigationStatusR\x06status\x12:\n" +
	"\n" +
	"start_date\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"start_date\x12R\n" +
	"\x16target_completion_date\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x16target_completion_date\x12R\n" +
	"\x16actual_completion_date\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\x16actual_completion_date\x12\x1e\n" +
	"\n" +
	"owner_uuid\x18\t \x01(\tR\n" +
	"owner_uuid\x12,\n" +
	"\x11stakeholder_uuids\x18\n" +
	" \x03(\tR\x11stakeholder_uuids\x12&\n" +
	"\x0eestimated_cost\x18\v \x01(\x01R\x0eestimated_cost\x12$\n" +
	"\rcost_currency\x18\f \x01(\tR\rcost_currency\x124\n" +
	"\x15completion_percentage\x18\r \x01(\x05R\x15completion_percentage\x12A\n" +
	"\aactions\x18\x0e \x03(\v2'.proto.scg.risk.v1.RiskMitigationActionR\aactions\x12:\n" +
	"\n" +
	"created_at\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"created_at\x12:\n" +
	"\n" +
	"updated_at\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"updated_at\"\xbe\x03\n" +
	"\x14RiskMitigationAction\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x122\n" +
	"\x14mitigation_plan_uuid\x18\x02 \x01(\tR\x14mitigation_plan_uuid\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12\x1e\n" +
	"\n" +
	"owner_uuid\x18\x05 \x01(\tR\n" +
	"owner_uuid\x126\n" +
	"\bdue_date\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\bdue_date\x12>\n" +
	"\fcompleted_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\fcompleted_at\x12\x14\n" +
	"\x05notes\x18\b \x01(\tR\x05notes\x12:\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"created_at\x12:\n" +
	"\n" +
	"updated_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"updated_at\"\xac\a\n" +
	"\fRiskIncident\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12\x1c\n" +
	"\trisk_uuid\x18\x02 \x01(\tR\trisk_uuid\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12I\n" +
	"\x0factual_severity\x18\x05 \x01(\x0e2\x1f.proto.scg.risk.v1.RiskSeverityR\x0factual_severity\x12S\n" +
	"\x13actual_impact_types\x18\x06 \x03(\x0e2!.proto.scg.risk.v1.RiskImpactTypeR\x13actual_impact_types\x12.\n" +
	"\x12impact_description\x18\a \x01(\tR\x12impact_description\x12*\n" +
	"\x10financial_impact\x18\b \x01(\x01R\x10financial_impact\x12<\n" +
	"\x19financial_impact_currency\x18\t \x01(\tR\x19financial_impact_currency\x12<\n" +
	"\voccurred_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\voccurred_at\x12<\n" +
	"\vdetected_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\vdetected_at\x12<\n" +
	"\vresolved_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\vresolved_at\x12\x16\n" +
	"\x06status\x18\r \x01(\tR\x06status\x12\x1e\n" +
	"\n" +
	"owner_uuid\x18\x0e \x01(\tR\n" +
	"owner_uuid\x124\n" +
	"\x15affected_entity_uuids\x18\x0f \x03(\tR\x15affected_entity_uuids\x12.\n" +
	"\x12resolution_summary\x18\x10 \x01(\tR\x12resolution_summary\x12(\n" +
	"\x0flessons_learned\x18\x11 \x01(\tR\x0flessons_learned\x12:\n" +
	"\n" +
	"created_at\x18\x12 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"created_at\x12:\n" +
	"\n" +
	"updated_at\x18\x13 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"updated_at\"\xa9\x05\n" +
	"\x0eRiskAssessment\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12?\n" +
	"\x06method\x18\x04 \x01(\x0e2'.proto.scg.risk.v1.RiskAssessmentMethodR\x06method\x12\x1e\n" +
	"\n" +
	"scope_type\x18\x05 \x01(\tR\n" +
	"scope_type\x12\x1e\n" +
	"\n" +
	"scope_uuid\x18\x06 \x01(\tR\n" +
	"scope_uuid\x12D\n" +
	"\x0fassessment_date\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x0fassessment_date\x12N\n" +
	"\x14next_assessment_date\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\x14next_assessment_date\x124\n" +
	"\x15identified_risk_uuids\x18\t \x03(\tR\x15identified_risk_uuids\x12\x18\n" +
	"\asummary\x18\n" +
	" \x01(\tR\asummary\x12(\n" +
	"\x0frecommendations\x18\v \x01(\tR\x0frecommendations\x12\"\n" +
	"\fconducted_by\x18\f \x01(\tR\fconducted_by\x12 \n" +
	"\vapproved_by\x18\r \x01(\tR\vapproved_by\x12:\n" +
	"\n" +
	"created_at\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"created_at\x12:\n" +
	"\n" +
	"updated_at\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"updated_at\"\x8e\x05\n" +
	"\x12RiskMonitoringRule\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12;\n" +
	"\bcategory\x18\x04 \x01(\x0e2\x1f.proto.scg.risk.v1.RiskCategoryR\bcategory\x12C\n" +
	"\fmin_severity\x18\x05 \x01(\x0e2\x1f.proto.scg.risk.v1.RiskSeverityR\fmin_severity\x12L\n" +
	"\x0fmin_probability\x18\x06 \x01(\x0e2\".proto.scg.risk.v1.RiskProbabilityR\x0fmin_probability\x12&\n" +
	"\x0emin_risk_score\x18\a \x01(\x01R\x0emin_risk_score\x12<\n" +
	"\x19monitoring_frequency_days\x18\b \x01(\x05R\x19monitoring_frequency_days\x12\x16\n" +
	"\x06active\x18\t \x01(\bR\x06active\x12$\n" +
	"\rauto_escalate\x18\n" +
	" \x01(\bR\rauto_escalate\x12B\n" +
	"\x1cnotification_recipient_uuids\x18\v \x03(\tR\x1cnotification_recipient_uuids\x12:\n" +
	"\n" +
	"created_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"created_at\x12:\n" +
	"\n" +
	"updated_at\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"updated_at\"\xbf\x03\n" +
	"\aRiskKPI\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12 \n" +
	"\vmetric_type\x18\x04 \x01(\tR\vmetric_type\x12\"\n" +
	"\ftarget_value\x18\x05 \x01(\x01R\ftarget_value\x12$\n" +
	"\rcurrent_value\x18\x06 \x01(\x01R\rcurrent_value\x12&\n" +
	"\x0eprevious_value\x18\a \x01(\x01R\x0eprevious_value\x12F\n" +
	"\x10measurement_date\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\x10measurement_date\x12\x16\n" +
	"\x06status\x18\t \x01(\tR\x06status\x12:\n" +
	"\n" +
	"created_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"created_at\x12:\n" +
	"\n" +
	"updated_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"updated_atB\xd0\x01\n" +
	"\x15com.proto.scg.risk.v1B\vModelsProtoP\x01ZCgithub.com/next-trace/scg-contracts/gen/go/proto/scg/risk/v1;riskv1\xa2\x02\x03PSR\xaa\x02\x11Proto.Scg.Risk.V1\xca\x02\x11Proto\\Scg\\Risk\\V1\xe2\x02\x1dProto\\Scg\\Risk\\V1\\GPBMetadata\xea\x02\x14Proto::Scg::Risk::V1b\x06proto3"

var (
	file_proto_scg_risk_v1_models_proto_rawDescOnce sync.Once
	file_proto_scg_risk_v1_models_proto_rawDescData []byte
)

func file_proto_scg_risk_v1_models_proto_rawDescGZIP() []byte {
	file_proto_scg_risk_v1_models_proto_rawDescOnce.Do(func() {
		file_proto_scg_risk_v1_models_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_scg_risk_v1_models_proto_rawDesc), len(file_proto_scg_risk_v1_models_proto_rawDesc)))
	})
	return file_proto_scg_risk_v1_models_proto_rawDescData
}

var file_proto_scg_risk_v1_models_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_scg_risk_v1_models_proto_goTypes = []any{
	(*Risk)(nil),                  // 0: proto.scg.risk.v1.Risk
	(*RiskMitigationPlan)(nil),    // 1: proto.scg.risk.v1.RiskMitigationPlan
	(*RiskMitigationAction)(nil),  // 2: proto.scg.risk.v1.RiskMitigationAction
	(*RiskIncident)(nil),          // 3: proto.scg.risk.v1.RiskIncident
	(*RiskAssessment)(nil),        // 4: proto.scg.risk.v1.RiskAssessment
	(*RiskMonitoringRule)(nil),    // 5: proto.scg.risk.v1.RiskMonitoringRule
	(*RiskKPI)(nil),               // 6: proto.scg.risk.v1.RiskKPI
	(RiskCategory)(0),             // 7: proto.scg.risk.v1.RiskCategory
	(RiskSeverity)(0),             // 8: proto.scg.risk.v1.RiskSeverity
	(RiskProbability)(0),          // 9: proto.scg.risk.v1.RiskProbability
	(RiskStatus)(0),               // 10: proto.scg.risk.v1.RiskStatus
	(RiskImpactType)(0),           // 11: proto.scg.risk.v1.RiskImpactType
	(RiskAssessmentMethod)(0),     // 12: proto.scg.risk.v1.RiskAssessmentMethod
	(*timestamppb.Timestamp)(nil), // 13: google.protobuf.Timestamp
	(MitigationStatus)(0),         // 14: proto.scg.risk.v1.MitigationStatus
}
var file_proto_scg_risk_v1_models_proto_depIdxs = []int32{
	7,  // 0: proto.scg.risk.v1.Risk.category:type_name -> proto.scg.risk.v1.RiskCategory
	8,  // 1: proto.scg.risk.v1.Risk.severity:type_name -> proto.scg.risk.v1.RiskSeverity
	9,  // 2: proto.scg.risk.v1.Risk.probability:type_name -> proto.scg.risk.v1.RiskProbability
	10, // 3: proto.scg.risk.v1.Risk.status:type_name -> proto.scg.risk.v1.RiskStatus
	11, // 4: proto.scg.risk.v1.Risk.impact_types:type_name -> proto.scg.risk.v1.RiskImpactType
	12, // 5: proto.scg.risk.v1.Risk.assessment_method:type_name -> proto.scg.risk.v1.RiskAssessmentMethod
	13, // 6: proto.scg.risk.v1.Risk.identified_at:type_name -> google.protobuf.Timestamp
	13, // 7: proto.scg.risk.v1.Risk.last_assessed_at:type_name -> google.protobuf.Timestamp
	13, // 8: proto.scg.risk.v1.Risk.next_review_date:type_name -> google.protobuf.Timestamp
	13, // 9: proto.scg.risk.v1.Risk.created_at:type_name -> google.protobuf.Timestamp
	13, // 10: proto.scg.risk.v1.Risk.updated_at:type_name -> google.protobuf.Timestamp
	14, // 11: proto.scg.risk.v1.RiskMitigationPlan.status:type_name -> proto.scg.risk.v1.MitigationStatus
	13, // 12: proto.scg.risk.v1.RiskMitigationPlan.start_date:type_name -> google.protobuf.Timestamp
	13, // 13: proto.scg.risk.v1.RiskMitigationPlan.target_completion_date:type_name -> google.protobuf.Timestamp
	13, // 14: proto.scg.risk.v1.RiskMitigationPlan.actual_completion_date:type_name -> google.protobuf.Timestamp
	2,  // 15: proto.scg.risk.v1.RiskMitigationPlan.actions:type_name -> proto.scg.risk.v1.RiskMitigationAction
	13, // 16: proto.scg.risk.v1.RiskMitigationPlan.created_at:type_name -> google.protobuf.Timestamp
	13, // 17: proto.scg.risk.v1.RiskMitigationPlan.updated_at:type_name -> google.protobuf.Timestamp
	13, // 18: proto.scg.risk.v1.RiskMitigationAction.due_date:type_name -> google.protobuf.Timestamp
	13, // 19: proto.scg.risk.v1.RiskMitigationAction.completed_at:type_name -> google.protobuf.Timestamp
	13, // 20: proto.scg.risk.v1.RiskMitigationAction.created_at:type_name -> google.protobuf.Timestamp
	13, // 21: proto.scg.risk.v1.RiskMitigationAction.updated_at:type_name -> google.protobuf.Timestamp
	8,  // 22: proto.scg.risk.v1.RiskIncident.actual_severity:type_name -> proto.scg.risk.v1.RiskSeverity
	11, // 23: proto.scg.risk.v1.RiskIncident.actual_impact_types:type_name -> proto.scg.risk.v1.RiskImpactType
	13, // 24: proto.scg.risk.v1.RiskIncident.occurred_at:type_name -> google.protobuf.Timestamp
	13, // 25: proto.scg.risk.v1.RiskIncident.detected_at:type_name -> google.protobuf.Timestamp
	13, // 26: proto.scg.risk.v1.RiskIncident.resolved_at:type_name -> google.protobuf.Timestamp
	13, // 27: proto.scg.risk.v1.RiskIncident.created_at:type_name -> google.protobuf.Timestamp
	13, // 28: proto.scg.risk.v1.RiskIncident.updated_at:type_name -> google.protobuf.Timestamp
	12, // 29: proto.scg.risk.v1.RiskAssessment.method:type_name -> proto.scg.risk.v1.RiskAssessmentMethod
	13, // 30: proto.scg.risk.v1.RiskAssessment.assessment_date:type_name -> google.protobuf.Timestamp
	13, // 31: proto.scg.risk.v1.RiskAssessment.next_assessment_date:type_name -> google.protobuf.Timestamp
	13, // 32: proto.scg.risk.v1.RiskAssessment.created_at:type_name -> google.protobuf.Timestamp
	13, // 33: proto.scg.risk.v1.RiskAssessment.updated_at:type_name -> google.protobuf.Timestamp
	7,  // 34: proto.scg.risk.v1.RiskMonitoringRule.category:type_name -> proto.scg.risk.v1.RiskCategory
	8,  // 35: proto.scg.risk.v1.RiskMonitoringRule.min_severity:type_name -> proto.scg.risk.v1.RiskSeverity
	9,  // 36: proto.scg.risk.v1.RiskMonitoringRule.min_probability:type_name -> proto.scg.risk.v1.RiskProbability
	13, // 37: proto.scg.risk.v1.RiskMonitoringRule.created_at:type_name -> google.protobuf.Timestamp
	13, // 38: proto.scg.risk.v1.RiskMonitoringRule.updated_at:type_name -> google.protobuf.Timestamp
	13, // 39: proto.scg.risk.v1.RiskKPI.measurement_date:type_name -> google.protobuf.Timestamp
	13, // 40: proto.scg.risk.v1.RiskKPI.created_at:type_name -> google.protobuf.Timestamp
	13, // 41: proto.scg.risk.v1.RiskKPI.updated_at:type_name -> google.protobuf.Timestamp
	42, // [42:42] is the sub-list for method output_type
	42, // [42:42] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_proto_scg_risk_v1_models_proto_init() }
func file_proto_scg_risk_v1_models_proto_init() {
	if File_proto_scg_risk_v1_models_proto != nil {
		return
	}
	file_proto_scg_risk_v1_enums_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_scg_risk_v1_models_proto_rawDesc), len(file_proto_scg_risk_v1_models_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_scg_risk_v1_models_proto_goTypes,
		DependencyIndexes: file_proto_scg_risk_v1_models_proto_depIdxs,
		MessageInfos:      file_proto_scg_risk_v1_models_proto_msgTypes,
	}.Build()
	File_proto_scg_risk_v1_models_proto = out.File
	file_proto_scg_risk_v1_models_proto_goTypes = nil
	file_proto_scg_risk_v1_models_proto_depIdxs = nil
}
