// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/scg/risk/v1/enums.proto

package riskv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RiskCategory represents different categories of supply chain risks
type RiskCategory int32

const (
	RiskCategory_RISK_CATEGORY_UNSPECIFIED   RiskCategory = 0
	RiskCategory_RISK_CATEGORY_SUPPLIER      RiskCategory = 1  // Risks related to suppliers (financial stability, compliance, etc.)
	RiskCategory_RISK_CATEGORY_LOGISTICS     RiskCategory = 2  // Risks related to transportation and logistics
	RiskCategory_RISK_CATEGORY_QUALITY       RiskCategory = 3  // Risks related to product quality
	RiskCategory_RISK_CATEGORY_COMPLIANCE    RiskCategory = 4  // Risks related to regulatory compliance
	RiskCategory_RISK_CATEGORY_FINANCIAL     RiskCategory = 5  // Financial risks (currency, payment, etc.)
	RiskCategory_RISK_CATEGORY_GEOPOLITICAL  RiskCategory = 6  // Geopolitical risks (trade wars, sanctions, etc.)
	RiskCategory_RISK_CATEGORY_ENVIRONMENTAL RiskCategory = 7  // Environmental risks (natural disasters, climate change, etc.)
	RiskCategory_RISK_CATEGORY_CYBER         RiskCategory = 8  // Cybersecurity risks
	RiskCategory_RISK_CATEGORY_FRAUD         RiskCategory = 9  // Fraud risks
	RiskCategory_RISK_CATEGORY_OPERATIONAL   RiskCategory = 10 // Operational risks (process failures, etc.)
)

// Enum value maps for RiskCategory.
var (
	RiskCategory_name = map[int32]string{
		0:  "RISK_CATEGORY_UNSPECIFIED",
		1:  "RISK_CATEGORY_SUPPLIER",
		2:  "RISK_CATEGORY_LOGISTICS",
		3:  "RISK_CATEGORY_QUALITY",
		4:  "RISK_CATEGORY_COMPLIANCE",
		5:  "RISK_CATEGORY_FINANCIAL",
		6:  "RISK_CATEGORY_GEOPOLITICAL",
		7:  "RISK_CATEGORY_ENVIRONMENTAL",
		8:  "RISK_CATEGORY_CYBER",
		9:  "RISK_CATEGORY_FRAUD",
		10: "RISK_CATEGORY_OPERATIONAL",
	}
	RiskCategory_value = map[string]int32{
		"RISK_CATEGORY_UNSPECIFIED":   0,
		"RISK_CATEGORY_SUPPLIER":      1,
		"RISK_CATEGORY_LOGISTICS":     2,
		"RISK_CATEGORY_QUALITY":       3,
		"RISK_CATEGORY_COMPLIANCE":    4,
		"RISK_CATEGORY_FINANCIAL":     5,
		"RISK_CATEGORY_GEOPOLITICAL":  6,
		"RISK_CATEGORY_ENVIRONMENTAL": 7,
		"RISK_CATEGORY_CYBER":         8,
		"RISK_CATEGORY_FRAUD":         9,
		"RISK_CATEGORY_OPERATIONAL":   10,
	}
)

func (x RiskCategory) Enum() *RiskCategory {
	p := new(RiskCategory)
	*p = x
	return p
}

func (x RiskCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RiskCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scg_risk_v1_enums_proto_enumTypes[0].Descriptor()
}

func (RiskCategory) Type() protoreflect.EnumType {
	return &file_proto_scg_risk_v1_enums_proto_enumTypes[0]
}

func (x RiskCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RiskCategory.Descriptor instead.
func (RiskCategory) EnumDescriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_enums_proto_rawDescGZIP(), []int{0}
}

// RiskSeverity represents the severity level of a risk
type RiskSeverity int32

const (
	RiskSeverity_RISK_SEVERITY_UNSPECIFIED RiskSeverity = 0
	RiskSeverity_RISK_SEVERITY_LOW         RiskSeverity = 1 // Low severity, minimal impact
	RiskSeverity_RISK_SEVERITY_MEDIUM      RiskSeverity = 2 // Medium severity, moderate impact
	RiskSeverity_RISK_SEVERITY_HIGH        RiskSeverity = 3 // High severity, significant impact
	RiskSeverity_RISK_SEVERITY_CRITICAL    RiskSeverity = 4 // Critical severity, severe impact
)

// Enum value maps for RiskSeverity.
var (
	RiskSeverity_name = map[int32]string{
		0: "RISK_SEVERITY_UNSPECIFIED",
		1: "RISK_SEVERITY_LOW",
		2: "RISK_SEVERITY_MEDIUM",
		3: "RISK_SEVERITY_HIGH",
		4: "RISK_SEVERITY_CRITICAL",
	}
	RiskSeverity_value = map[string]int32{
		"RISK_SEVERITY_UNSPECIFIED": 0,
		"RISK_SEVERITY_LOW":         1,
		"RISK_SEVERITY_MEDIUM":      2,
		"RISK_SEVERITY_HIGH":        3,
		"RISK_SEVERITY_CRITICAL":    4,
	}
)

func (x RiskSeverity) Enum() *RiskSeverity {
	p := new(RiskSeverity)
	*p = x
	return p
}

func (x RiskSeverity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RiskSeverity) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scg_risk_v1_enums_proto_enumTypes[1].Descriptor()
}

func (RiskSeverity) Type() protoreflect.EnumType {
	return &file_proto_scg_risk_v1_enums_proto_enumTypes[1]
}

func (x RiskSeverity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RiskSeverity.Descriptor instead.
func (RiskSeverity) EnumDescriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_enums_proto_rawDescGZIP(), []int{1}
}

// RiskProbability represents the likelihood of a risk occurring
type RiskProbability int32

const (
	RiskProbability_RISK_PROBABILITY_UNSPECIFIED    RiskProbability = 0
	RiskProbability_RISK_PROBABILITY_RARE           RiskProbability = 1 // Unlikely to occur
	RiskProbability_RISK_PROBABILITY_UNLIKELY       RiskProbability = 2 // May occur occasionally
	RiskProbability_RISK_PROBABILITY_POSSIBLE       RiskProbability = 3 // Might occur at some point
	RiskProbability_RISK_PROBABILITY_LIKELY         RiskProbability = 4 // Will probably occur
	RiskProbability_RISK_PROBABILITY_ALMOST_CERTAIN RiskProbability = 5 // Expected to occur
)

// Enum value maps for RiskProbability.
var (
	RiskProbability_name = map[int32]string{
		0: "RISK_PROBABILITY_UNSPECIFIED",
		1: "RISK_PROBABILITY_RARE",
		2: "RISK_PROBABILITY_UNLIKELY",
		3: "RISK_PROBABILITY_POSSIBLE",
		4: "RISK_PROBABILITY_LIKELY",
		5: "RISK_PROBABILITY_ALMOST_CERTAIN",
	}
	RiskProbability_value = map[string]int32{
		"RISK_PROBABILITY_UNSPECIFIED":    0,
		"RISK_PROBABILITY_RARE":           1,
		"RISK_PROBABILITY_UNLIKELY":       2,
		"RISK_PROBABILITY_POSSIBLE":       3,
		"RISK_PROBABILITY_LIKELY":         4,
		"RISK_PROBABILITY_ALMOST_CERTAIN": 5,
	}
)

func (x RiskProbability) Enum() *RiskProbability {
	p := new(RiskProbability)
	*p = x
	return p
}

func (x RiskProbability) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RiskProbability) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scg_risk_v1_enums_proto_enumTypes[2].Descriptor()
}

func (RiskProbability) Type() protoreflect.EnumType {
	return &file_proto_scg_risk_v1_enums_proto_enumTypes[2]
}

func (x RiskProbability) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RiskProbability.Descriptor instead.
func (RiskProbability) EnumDescriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_enums_proto_rawDescGZIP(), []int{2}
}

// RiskStatus represents the status of a risk
type RiskStatus int32

const (
	RiskStatus_RISK_STATUS_UNSPECIFIED  RiskStatus = 0
	RiskStatus_RISK_STATUS_IDENTIFIED   RiskStatus = 1 // Risk has been identified
	RiskStatus_RISK_STATUS_ASSESSED     RiskStatus = 2 // Risk has been assessed
	RiskStatus_RISK_STATUS_MITIGATED    RiskStatus = 3 // Risk has been mitigated
	RiskStatus_RISK_STATUS_ACCEPTED     RiskStatus = 4 // Risk has been accepted
	RiskStatus_RISK_STATUS_TRANSFERRED  RiskStatus = 5 // Risk has been transferred (e.g., insurance)
	RiskStatus_RISK_STATUS_RESOLVED     RiskStatus = 6 // Risk has been resolved
	RiskStatus_RISK_STATUS_MATERIALIZED RiskStatus = 7 // Risk has materialized into an incident
)

// Enum value maps for RiskStatus.
var (
	RiskStatus_name = map[int32]string{
		0: "RISK_STATUS_UNSPECIFIED",
		1: "RISK_STATUS_IDENTIFIED",
		2: "RISK_STATUS_ASSESSED",
		3: "RISK_STATUS_MITIGATED",
		4: "RISK_STATUS_ACCEPTED",
		5: "RISK_STATUS_TRANSFERRED",
		6: "RISK_STATUS_RESOLVED",
		7: "RISK_STATUS_MATERIALIZED",
	}
	RiskStatus_value = map[string]int32{
		"RISK_STATUS_UNSPECIFIED":  0,
		"RISK_STATUS_IDENTIFIED":   1,
		"RISK_STATUS_ASSESSED":     2,
		"RISK_STATUS_MITIGATED":    3,
		"RISK_STATUS_ACCEPTED":     4,
		"RISK_STATUS_TRANSFERRED":  5,
		"RISK_STATUS_RESOLVED":     6,
		"RISK_STATUS_MATERIALIZED": 7,
	}
)

func (x RiskStatus) Enum() *RiskStatus {
	p := new(RiskStatus)
	*p = x
	return p
}

func (x RiskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RiskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scg_risk_v1_enums_proto_enumTypes[3].Descriptor()
}

func (RiskStatus) Type() protoreflect.EnumType {
	return &file_proto_scg_risk_v1_enums_proto_enumTypes[3]
}

func (x RiskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RiskStatus.Descriptor instead.
func (RiskStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_enums_proto_rawDescGZIP(), []int{3}
}

// MitigationStatus represents the status of a risk mitigation plan
type MitigationStatus int32

const (
	MitigationStatus_MITIGATION_STATUS_UNSPECIFIED MitigationStatus = 0
	MitigationStatus_MITIGATION_STATUS_PLANNED     MitigationStatus = 1 // Mitigation plan has been created
	MitigationStatus_MITIGATION_STATUS_IN_PROGRESS MitigationStatus = 2 // Mitigation is in progress
	MitigationStatus_MITIGATION_STATUS_COMPLETED   MitigationStatus = 3 // Mitigation has been completed
	MitigationStatus_MITIGATION_STATUS_FAILED      MitigationStatus = 4 // Mitigation has failed
	MitigationStatus_MITIGATION_STATUS_CANCELLED   MitigationStatus = 5 // Mitigation has been cancelled
)

// Enum value maps for MitigationStatus.
var (
	MitigationStatus_name = map[int32]string{
		0: "MITIGATION_STATUS_UNSPECIFIED",
		1: "MITIGATION_STATUS_PLANNED",
		2: "MITIGATION_STATUS_IN_PROGRESS",
		3: "MITIGATION_STATUS_COMPLETED",
		4: "MITIGATION_STATUS_FAILED",
		5: "MITIGATION_STATUS_CANCELLED",
	}
	MitigationStatus_value = map[string]int32{
		"MITIGATION_STATUS_UNSPECIFIED": 0,
		"MITIGATION_STATUS_PLANNED":     1,
		"MITIGATION_STATUS_IN_PROGRESS": 2,
		"MITIGATION_STATUS_COMPLETED":   3,
		"MITIGATION_STATUS_FAILED":      4,
		"MITIGATION_STATUS_CANCELLED":   5,
	}
)

func (x MitigationStatus) Enum() *MitigationStatus {
	p := new(MitigationStatus)
	*p = x
	return p
}

func (x MitigationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MitigationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scg_risk_v1_enums_proto_enumTypes[4].Descriptor()
}

func (MitigationStatus) Type() protoreflect.EnumType {
	return &file_proto_scg_risk_v1_enums_proto_enumTypes[4]
}

func (x MitigationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MitigationStatus.Descriptor instead.
func (MitigationStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_enums_proto_rawDescGZIP(), []int{4}
}

// RiskImpactType represents the type of impact a risk may have
type RiskImpactType int32

const (
	RiskImpactType_RISK_IMPACT_TYPE_UNSPECIFIED   RiskImpactType = 0
	RiskImpactType_RISK_IMPACT_TYPE_FINANCIAL     RiskImpactType = 1 // Financial impact
	RiskImpactType_RISK_IMPACT_TYPE_OPERATIONAL   RiskImpactType = 2 // Operational impact
	RiskImpactType_RISK_IMPACT_TYPE_REPUTATIONAL  RiskImpactType = 3 // Reputational impact
	RiskImpactType_RISK_IMPACT_TYPE_COMPLIANCE    RiskImpactType = 4 // Compliance impact
	RiskImpactType_RISK_IMPACT_TYPE_SAFETY        RiskImpactType = 5 // Safety impact
	RiskImpactType_RISK_IMPACT_TYPE_ENVIRONMENTAL RiskImpactType = 6 // Environmental impact
)

// Enum value maps for RiskImpactType.
var (
	RiskImpactType_name = map[int32]string{
		0: "RISK_IMPACT_TYPE_UNSPECIFIED",
		1: "RISK_IMPACT_TYPE_FINANCIAL",
		2: "RISK_IMPACT_TYPE_OPERATIONAL",
		3: "RISK_IMPACT_TYPE_REPUTATIONAL",
		4: "RISK_IMPACT_TYPE_COMPLIANCE",
		5: "RISK_IMPACT_TYPE_SAFETY",
		6: "RISK_IMPACT_TYPE_ENVIRONMENTAL",
	}
	RiskImpactType_value = map[string]int32{
		"RISK_IMPACT_TYPE_UNSPECIFIED":   0,
		"RISK_IMPACT_TYPE_FINANCIAL":     1,
		"RISK_IMPACT_TYPE_OPERATIONAL":   2,
		"RISK_IMPACT_TYPE_REPUTATIONAL":  3,
		"RISK_IMPACT_TYPE_COMPLIANCE":    4,
		"RISK_IMPACT_TYPE_SAFETY":        5,
		"RISK_IMPACT_TYPE_ENVIRONMENTAL": 6,
	}
)

func (x RiskImpactType) Enum() *RiskImpactType {
	p := new(RiskImpactType)
	*p = x
	return p
}

func (x RiskImpactType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RiskImpactType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scg_risk_v1_enums_proto_enumTypes[5].Descriptor()
}

func (RiskImpactType) Type() protoreflect.EnumType {
	return &file_proto_scg_risk_v1_enums_proto_enumTypes[5]
}

func (x RiskImpactType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RiskImpactType.Descriptor instead.
func (RiskImpactType) EnumDescriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_enums_proto_rawDescGZIP(), []int{5}
}

// RiskAssessmentMethod represents different methods for assessing risks
type RiskAssessmentMethod int32

const (
	RiskAssessmentMethod_RISK_ASSESSMENT_METHOD_UNSPECIFIED       RiskAssessmentMethod = 0
	RiskAssessmentMethod_RISK_ASSESSMENT_METHOD_QUALITATIVE       RiskAssessmentMethod = 1 // Qualitative assessment
	RiskAssessmentMethod_RISK_ASSESSMENT_METHOD_QUANTITATIVE      RiskAssessmentMethod = 2 // Quantitative assessment
	RiskAssessmentMethod_RISK_ASSESSMENT_METHOD_SEMI_QUANTITATIVE RiskAssessmentMethod = 3 // Semi-quantitative assessment
)

// Enum value maps for RiskAssessmentMethod.
var (
	RiskAssessmentMethod_name = map[int32]string{
		0: "RISK_ASSESSMENT_METHOD_UNSPECIFIED",
		1: "RISK_ASSESSMENT_METHOD_QUALITATIVE",
		2: "RISK_ASSESSMENT_METHOD_QUANTITATIVE",
		3: "RISK_ASSESSMENT_METHOD_SEMI_QUANTITATIVE",
	}
	RiskAssessmentMethod_value = map[string]int32{
		"RISK_ASSESSMENT_METHOD_UNSPECIFIED":       0,
		"RISK_ASSESSMENT_METHOD_QUALITATIVE":       1,
		"RISK_ASSESSMENT_METHOD_QUANTITATIVE":      2,
		"RISK_ASSESSMENT_METHOD_SEMI_QUANTITATIVE": 3,
	}
)

func (x RiskAssessmentMethod) Enum() *RiskAssessmentMethod {
	p := new(RiskAssessmentMethod)
	*p = x
	return p
}

func (x RiskAssessmentMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RiskAssessmentMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scg_risk_v1_enums_proto_enumTypes[6].Descriptor()
}

func (RiskAssessmentMethod) Type() protoreflect.EnumType {
	return &file_proto_scg_risk_v1_enums_proto_enumTypes[6]
}

func (x RiskAssessmentMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RiskAssessmentMethod.Descriptor instead.
func (RiskAssessmentMethod) EnumDescriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_enums_proto_rawDescGZIP(), []int{6}
}

var File_proto_scg_risk_v1_enums_proto protoreflect.FileDescriptor

const file_proto_scg_risk_v1_enums_proto_rawDesc = "" +
	"\n" +
	"\x1dproto/scg/risk/v1/enums.proto\x12\x11proto.scg.risk.v1*\xce\x02\n" +
	"\fRiskCategory\x12\x1d\n" +
	"\x19RISK_CATEGORY_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16RISK_CATEGORY_SUPPLIER\x10\x01\x12\x1b\n" +
	"\x17RISK_CATEGORY_LOGISTICS\x10\x02\x12\x19\n" +
	"\x15RISK_CATEGORY_QUALITY\x10\x03\x12\x1c\n" +
	"\x18RISK_CATEGORY_COMPLIANCE\x10\x04\x12\x1b\n" +
	"\x17RISK_CATEGORY_FINANCIAL\x10\x05\x12\x1e\n" +
	"\x1aRISK_CATEGORY_GEOPOLITICAL\x10\x06\x12\x1f\n" +
	"\x1bRISK_CATEGORY_ENVIRONMENTAL\x10\a\x12\x17\n" +
	"\x13RISK_CATEGORY_CYBER\x10\b\x12\x17\n" +
	"\x13RISK_CATEGORY_FRAUD\x10\t\x12\x1d\n" +
	"\x19RISK_CATEGORY_OPERATIONAL\x10\n" +
	"*\x92\x01\n" +
	"\fRiskSeverity\x12\x1d\n" +
	"\x19RISK_SEVERITY_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11RISK_SEVERITY_LOW\x10\x01\x12\x18\n" +
	"\x14RISK_SEVERITY_MEDIUM\x10\x02\x12\x16\n" +
	"\x12RISK_SEVERITY_HIGH\x10\x03\x12\x1a\n" +
	"\x16RISK_SEVERITY_CRITICAL\x10\x04*\xce\x01\n" +
	"\x0fRiskProbability\x12 \n" +
	"\x1cRISK_PROBABILITY_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15RISK_PROBABILITY_RARE\x10\x01\x12\x1d\n" +
	"\x19RISK_PROBABILITY_UNLIKELY\x10\x02\x12\x1d\n" +
	"\x19RISK_PROBABILITY_POSSIBLE\x10\x03\x12\x1b\n" +
	"\x17RISK_PROBABILITY_LIKELY\x10\x04\x12#\n" +
	"\x1fRISK_PROBABILITY_ALMOST_CERTAIN\x10\x05*\xe9\x01\n" +
	"\n" +
	"RiskStatus\x12\x1b\n" +
	"\x17RISK_STATUS_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16RISK_STATUS_IDENTIFIED\x10\x01\x12\x18\n" +
	"\x14RISK_STATUS_ASSESSED\x10\x02\x12\x19\n" +
	"\x15RISK_STATUS_MITIGATED\x10\x03\x12\x18\n" +
	"\x14RISK_STATUS_ACCEPTED\x10\x04\x12\x1b\n" +
	"\x17RISK_STATUS_TRANSFERRED\x10\x05\x12\x18\n" +
	"\x14RISK_STATUS_RESOLVED\x10\x06\x12\x1c\n" +
	"\x18RISK_STATUS_MATERIALIZED\x10\a*\xd7\x01\n" +
	"\x10MitigationStatus\x12!\n" +
	"\x1dMITIGATION_STATUS_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19MITIGATION_STATUS_PLANNED\x10\x01\x12!\n" +
	"\x1dMITIGATION_STATUS_IN_PROGRESS\x10\x02\x12\x1f\n" +
	"\x1bMITIGATION_STATUS_COMPLETED\x10\x03\x12\x1c\n" +
	"\x18MITIGATION_STATUS_FAILED\x10\x04\x12\x1f\n" +
	"\x1bMITIGATION_STATUS_CANCELLED\x10\x05*\xf9\x01\n" +
	"\x0eRiskImpactType\x12 \n" +
	"\x1cRISK_IMPACT_TYPE_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aRISK_IMPACT_TYPE_FINANCIAL\x10\x01\x12 \n" +
	"\x1cRISK_IMPACT_TYPE_OPERATIONAL\x10\x02\x12!\n" +
	"\x1dRISK_IMPACT_TYPE_REPUTATIONAL\x10\x03\x12\x1f\n" +
	"\x1bRISK_IMPACT_TYPE_COMPLIANCE\x10\x04\x12\x1b\n" +
	"\x17RISK_IMPACT_TYPE_SAFETY\x10\x05\x12\"\n" +
	"\x1eRISK_IMPACT_TYPE_ENVIRONMENTAL\x10\x06*\xbd\x01\n" +
	"\x14RiskAssessmentMethod\x12&\n" +
	"\"RISK_ASSESSMENT_METHOD_UNSPECIFIED\x10\x00\x12&\n" +
	"\"RISK_ASSESSMENT_METHOD_QUALITATIVE\x10\x01\x12'\n" +
	"#RISK_ASSESSMENT_METHOD_QUANTITATIVE\x10\x02\x12,\n" +
	"(RISK_ASSESSMENT_METHOD_SEMI_QUANTITATIVE\x10\x03B\xcf\x01\n" +
	"\x15com.proto.scg.risk.v1B\n" +
	"EnumsProtoP\x01ZCgithub.com/next-trace/scg-contracts/gen/go/proto/scg/risk/v1;riskv1\xa2\x02\x03PSR\xaa\x02\x11Proto.Scg.Risk.V1\xca\x02\x11Proto\\Scg\\Risk\\V1\xe2\x02\x1dProto\\Scg\\Risk\\V1\\GPBMetadata\xea\x02\x14Proto::Scg::Risk::V1b\x06proto3"

var (
	file_proto_scg_risk_v1_enums_proto_rawDescOnce sync.Once
	file_proto_scg_risk_v1_enums_proto_rawDescData []byte
)

func file_proto_scg_risk_v1_enums_proto_rawDescGZIP() []byte {
	file_proto_scg_risk_v1_enums_proto_rawDescOnce.Do(func() {
		file_proto_scg_risk_v1_enums_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_scg_risk_v1_enums_proto_rawDesc), len(file_proto_scg_risk_v1_enums_proto_rawDesc)))
	})
	return file_proto_scg_risk_v1_enums_proto_rawDescData
}

var file_proto_scg_risk_v1_enums_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_proto_scg_risk_v1_enums_proto_goTypes = []any{
	(RiskCategory)(0),         // 0: proto.scg.risk.v1.RiskCategory
	(RiskSeverity)(0),         // 1: proto.scg.risk.v1.RiskSeverity
	(RiskProbability)(0),      // 2: proto.scg.risk.v1.RiskProbability
	(RiskStatus)(0),           // 3: proto.scg.risk.v1.RiskStatus
	(MitigationStatus)(0),     // 4: proto.scg.risk.v1.MitigationStatus
	(RiskImpactType)(0),       // 5: proto.scg.risk.v1.RiskImpactType
	(RiskAssessmentMethod)(0), // 6: proto.scg.risk.v1.RiskAssessmentMethod
}
var file_proto_scg_risk_v1_enums_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_scg_risk_v1_enums_proto_init() }
func file_proto_scg_risk_v1_enums_proto_init() {
	if File_proto_scg_risk_v1_enums_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_scg_risk_v1_enums_proto_rawDesc), len(file_proto_scg_risk_v1_enums_proto_rawDesc)),
			NumEnums:      7,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_scg_risk_v1_enums_proto_goTypes,
		DependencyIndexes: file_proto_scg_risk_v1_enums_proto_depIdxs,
		EnumInfos:         file_proto_scg_risk_v1_enums_proto_enumTypes,
	}.Build()
	File_proto_scg_risk_v1_enums_proto = out.File
	file_proto_scg_risk_v1_enums_proto_goTypes = nil
	file_proto_scg_risk_v1_enums_proto_depIdxs = nil
}
