// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/scg/risk/v1/events.proto

package riskv1

import (
	v1 "github.com/next-trace/scg-contracts/gen/go/proto/scg/shared/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// --- RISK EVENTS ---
type RiskIdentified struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Meta          *v1.EventEnvelope      `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	RiskUuid      string                 `protobuf:"bytes,2,opt,name=risk_uuid,proto3" json:"risk_uuid,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Category      string                 `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	Severity      string                 `protobuf:"bytes,5,opt,name=severity,proto3" json:"severity,omitempty"`
	Probability   string                 `protobuf:"bytes,6,opt,name=probability,proto3" json:"probability,omitempty"`
	EntityType    string                 `protobuf:"bytes,7,opt,name=entity_type,proto3" json:"entity_type,omitempty"`
	EntityUuid    string                 `protobuf:"bytes,8,opt,name=entity_uuid,proto3" json:"entity_uuid,omitempty"`
	IdentifiedBy  string                 `protobuf:"bytes,9,opt,name=identified_by,proto3" json:"identified_by,omitempty"`
	IdentifiedAt  *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=identified_at,proto3" json:"identified_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RiskIdentified) Reset() {
	*x = RiskIdentified{}
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskIdentified) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskIdentified) ProtoMessage() {}

func (x *RiskIdentified) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskIdentified.ProtoReflect.Descriptor instead.
func (*RiskIdentified) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_events_proto_rawDescGZIP(), []int{0}
}

func (x *RiskIdentified) GetMeta() *v1.EventEnvelope {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RiskIdentified) GetRiskUuid() string {
	if x != nil {
		return x.RiskUuid
	}
	return ""
}

func (x *RiskIdentified) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RiskIdentified) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *RiskIdentified) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *RiskIdentified) GetProbability() string {
	if x != nil {
		return x.Probability
	}
	return ""
}

func (x *RiskIdentified) GetEntityType() string {
	if x != nil {
		return x.EntityType
	}
	return ""
}

func (x *RiskIdentified) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *RiskIdentified) GetIdentifiedBy() string {
	if x != nil {
		return x.IdentifiedBy
	}
	return ""
}

func (x *RiskIdentified) GetIdentifiedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.IdentifiedAt
	}
	return nil
}

type RiskAssessed struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Meta             *v1.EventEnvelope      `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	RiskUuid         string                 `protobuf:"bytes,2,opt,name=risk_uuid,proto3" json:"risk_uuid,omitempty"`
	Severity         string                 `protobuf:"bytes,3,opt,name=severity,proto3" json:"severity,omitempty"`
	Probability      string                 `protobuf:"bytes,4,opt,name=probability,proto3" json:"probability,omitempty"`
	RiskScore        float64                `protobuf:"fixed64,5,opt,name=risk_score,proto3" json:"risk_score,omitempty"`
	AssessmentMethod string                 `protobuf:"bytes,6,opt,name=assessment_method,proto3" json:"assessment_method,omitempty"`
	AssessedBy       string                 `protobuf:"bytes,7,opt,name=assessed_by,proto3" json:"assessed_by,omitempty"`
	AssessedAt       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=assessed_at,proto3" json:"assessed_at,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RiskAssessed) Reset() {
	*x = RiskAssessed{}
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskAssessed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskAssessed) ProtoMessage() {}

func (x *RiskAssessed) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskAssessed.ProtoReflect.Descriptor instead.
func (*RiskAssessed) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_events_proto_rawDescGZIP(), []int{1}
}

func (x *RiskAssessed) GetMeta() *v1.EventEnvelope {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RiskAssessed) GetRiskUuid() string {
	if x != nil {
		return x.RiskUuid
	}
	return ""
}

func (x *RiskAssessed) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *RiskAssessed) GetProbability() string {
	if x != nil {
		return x.Probability
	}
	return ""
}

func (x *RiskAssessed) GetRiskScore() float64 {
	if x != nil {
		return x.RiskScore
	}
	return 0
}

func (x *RiskAssessed) GetAssessmentMethod() string {
	if x != nil {
		return x.AssessmentMethod
	}
	return ""
}

func (x *RiskAssessed) GetAssessedBy() string {
	if x != nil {
		return x.AssessedBy
	}
	return ""
}

func (x *RiskAssessed) GetAssessedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AssessedAt
	}
	return nil
}

type RiskSeverityChanged struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Meta             *v1.EventEnvelope      `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	RiskUuid         string                 `protobuf:"bytes,2,opt,name=risk_uuid,proto3" json:"risk_uuid,omitempty"`
	PreviousSeverity string                 `protobuf:"bytes,3,opt,name=previous_severity,proto3" json:"previous_severity,omitempty"`
	NewSeverity      string                 `protobuf:"bytes,4,opt,name=new_severity,proto3" json:"new_severity,omitempty"`
	NewRiskScore     float64                `protobuf:"fixed64,5,opt,name=new_risk_score,proto3" json:"new_risk_score,omitempty"`
	ChangedBy        string                 `protobuf:"bytes,6,opt,name=changed_by,proto3" json:"changed_by,omitempty"`
	ChangedAt        *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=changed_at,proto3" json:"changed_at,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RiskSeverityChanged) Reset() {
	*x = RiskSeverityChanged{}
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskSeverityChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskSeverityChanged) ProtoMessage() {}

func (x *RiskSeverityChanged) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskSeverityChanged.ProtoReflect.Descriptor instead.
func (*RiskSeverityChanged) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_events_proto_rawDescGZIP(), []int{2}
}

func (x *RiskSeverityChanged) GetMeta() *v1.EventEnvelope {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RiskSeverityChanged) GetRiskUuid() string {
	if x != nil {
		return x.RiskUuid
	}
	return ""
}

func (x *RiskSeverityChanged) GetPreviousSeverity() string {
	if x != nil {
		return x.PreviousSeverity
	}
	return ""
}

func (x *RiskSeverityChanged) GetNewSeverity() string {
	if x != nil {
		return x.NewSeverity
	}
	return ""
}

func (x *RiskSeverityChanged) GetNewRiskScore() float64 {
	if x != nil {
		return x.NewRiskScore
	}
	return 0
}

func (x *RiskSeverityChanged) GetChangedBy() string {
	if x != nil {
		return x.ChangedBy
	}
	return ""
}

func (x *RiskSeverityChanged) GetChangedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ChangedAt
	}
	return nil
}

type RiskProbabilityChanged struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Meta                *v1.EventEnvelope      `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	RiskUuid            string                 `protobuf:"bytes,2,opt,name=risk_uuid,proto3" json:"risk_uuid,omitempty"`
	PreviousProbability string                 `protobuf:"bytes,3,opt,name=previous_probability,proto3" json:"previous_probability,omitempty"`
	NewProbability      string                 `protobuf:"bytes,4,opt,name=new_probability,proto3" json:"new_probability,omitempty"`
	NewRiskScore        float64                `protobuf:"fixed64,5,opt,name=new_risk_score,proto3" json:"new_risk_score,omitempty"`
	ChangedBy           string                 `protobuf:"bytes,6,opt,name=changed_by,proto3" json:"changed_by,omitempty"`
	ChangedAt           *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=changed_at,proto3" json:"changed_at,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *RiskProbabilityChanged) Reset() {
	*x = RiskProbabilityChanged{}
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskProbabilityChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskProbabilityChanged) ProtoMessage() {}

func (x *RiskProbabilityChanged) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskProbabilityChanged.ProtoReflect.Descriptor instead.
func (*RiskProbabilityChanged) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_events_proto_rawDescGZIP(), []int{3}
}

func (x *RiskProbabilityChanged) GetMeta() *v1.EventEnvelope {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RiskProbabilityChanged) GetRiskUuid() string {
	if x != nil {
		return x.RiskUuid
	}
	return ""
}

func (x *RiskProbabilityChanged) GetPreviousProbability() string {
	if x != nil {
		return x.PreviousProbability
	}
	return ""
}

func (x *RiskProbabilityChanged) GetNewProbability() string {
	if x != nil {
		return x.NewProbability
	}
	return ""
}

func (x *RiskProbabilityChanged) GetNewRiskScore() float64 {
	if x != nil {
		return x.NewRiskScore
	}
	return 0
}

func (x *RiskProbabilityChanged) GetChangedBy() string {
	if x != nil {
		return x.ChangedBy
	}
	return ""
}

func (x *RiskProbabilityChanged) GetChangedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ChangedAt
	}
	return nil
}

type RiskStatusChanged struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Meta           *v1.EventEnvelope      `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	RiskUuid       string                 `protobuf:"bytes,2,opt,name=risk_uuid,proto3" json:"risk_uuid,omitempty"`
	PreviousStatus string                 `protobuf:"bytes,3,opt,name=previous_status,proto3" json:"previous_status,omitempty"`
	NewStatus      string                 `protobuf:"bytes,4,opt,name=new_status,proto3" json:"new_status,omitempty"`
	Reason         string                 `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	ChangedBy      string                 `protobuf:"bytes,6,opt,name=changed_by,proto3" json:"changed_by,omitempty"`
	ChangedAt      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=changed_at,proto3" json:"changed_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RiskStatusChanged) Reset() {
	*x = RiskStatusChanged{}
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskStatusChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskStatusChanged) ProtoMessage() {}

func (x *RiskStatusChanged) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskStatusChanged.ProtoReflect.Descriptor instead.
func (*RiskStatusChanged) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_events_proto_rawDescGZIP(), []int{4}
}

func (x *RiskStatusChanged) GetMeta() *v1.EventEnvelope {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RiskStatusChanged) GetRiskUuid() string {
	if x != nil {
		return x.RiskUuid
	}
	return ""
}

func (x *RiskStatusChanged) GetPreviousStatus() string {
	if x != nil {
		return x.PreviousStatus
	}
	return ""
}

func (x *RiskStatusChanged) GetNewStatus() string {
	if x != nil {
		return x.NewStatus
	}
	return ""
}

func (x *RiskStatusChanged) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *RiskStatusChanged) GetChangedBy() string {
	if x != nil {
		return x.ChangedBy
	}
	return ""
}

func (x *RiskStatusChanged) GetChangedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ChangedAt
	}
	return nil
}

type RiskMitigated struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Meta               *v1.EventEnvelope      `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	RiskUuid           string                 `protobuf:"bytes,2,opt,name=risk_uuid,proto3" json:"risk_uuid,omitempty"`
	MitigationPlanUuid string                 `protobuf:"bytes,3,opt,name=mitigation_plan_uuid,proto3" json:"mitigation_plan_uuid,omitempty"`
	MitigatedBy        string                 `protobuf:"bytes,4,opt,name=mitigated_by,proto3" json:"mitigated_by,omitempty"`
	MitigatedAt        *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=mitigated_at,proto3" json:"mitigated_at,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *RiskMitigated) Reset() {
	*x = RiskMitigated{}
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskMitigated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskMitigated) ProtoMessage() {}

func (x *RiskMitigated) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskMitigated.ProtoReflect.Descriptor instead.
func (*RiskMitigated) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_events_proto_rawDescGZIP(), []int{5}
}

func (x *RiskMitigated) GetMeta() *v1.EventEnvelope {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RiskMitigated) GetRiskUuid() string {
	if x != nil {
		return x.RiskUuid
	}
	return ""
}

func (x *RiskMitigated) GetMitigationPlanUuid() string {
	if x != nil {
		return x.MitigationPlanUuid
	}
	return ""
}

func (x *RiskMitigated) GetMitigatedBy() string {
	if x != nil {
		return x.MitigatedBy
	}
	return ""
}

func (x *RiskMitigated) GetMitigatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.MitigatedAt
	}
	return nil
}

type RiskAccepted struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Meta          *v1.EventEnvelope      `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	RiskUuid      string                 `protobuf:"bytes,2,opt,name=risk_uuid,proto3" json:"risk_uuid,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	AcceptedBy    string                 `protobuf:"bytes,4,opt,name=accepted_by,proto3" json:"accepted_by,omitempty"`
	AcceptedAt    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=accepted_at,proto3" json:"accepted_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RiskAccepted) Reset() {
	*x = RiskAccepted{}
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskAccepted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskAccepted) ProtoMessage() {}

func (x *RiskAccepted) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskAccepted.ProtoReflect.Descriptor instead.
func (*RiskAccepted) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_events_proto_rawDescGZIP(), []int{6}
}

func (x *RiskAccepted) GetMeta() *v1.EventEnvelope {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RiskAccepted) GetRiskUuid() string {
	if x != nil {
		return x.RiskUuid
	}
	return ""
}

func (x *RiskAccepted) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *RiskAccepted) GetAcceptedBy() string {
	if x != nil {
		return x.AcceptedBy
	}
	return ""
}

func (x *RiskAccepted) GetAcceptedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AcceptedAt
	}
	return nil
}

type RiskTransferred struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Meta           *v1.EventEnvelope      `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	RiskUuid       string                 `protobuf:"bytes,2,opt,name=risk_uuid,proto3" json:"risk_uuid,omitempty"`
	TransferMethod string                 `protobuf:"bytes,3,opt,name=transfer_method,proto3" json:"transfer_method,omitempty"` // "insurance", "outsourcing", etc.
	TransferredTo  string                 `protobuf:"bytes,4,opt,name=transferred_to,proto3" json:"transferred_to,omitempty"`   // Entity the risk was transferred to
	TransferredBy  string                 `protobuf:"bytes,5,opt,name=transferred_by,proto3" json:"transferred_by,omitempty"`
	TransferredAt  *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=transferred_at,proto3" json:"transferred_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RiskTransferred) Reset() {
	*x = RiskTransferred{}
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskTransferred) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskTransferred) ProtoMessage() {}

func (x *RiskTransferred) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskTransferred.ProtoReflect.Descriptor instead.
func (*RiskTransferred) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_events_proto_rawDescGZIP(), []int{7}
}

func (x *RiskTransferred) GetMeta() *v1.EventEnvelope {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RiskTransferred) GetRiskUuid() string {
	if x != nil {
		return x.RiskUuid
	}
	return ""
}

func (x *RiskTransferred) GetTransferMethod() string {
	if x != nil {
		return x.TransferMethod
	}
	return ""
}

func (x *RiskTransferred) GetTransferredTo() string {
	if x != nil {
		return x.TransferredTo
	}
	return ""
}

func (x *RiskTransferred) GetTransferredBy() string {
	if x != nil {
		return x.TransferredBy
	}
	return ""
}

func (x *RiskTransferred) GetTransferredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.TransferredAt
	}
	return nil
}

type RiskMaterialized struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Meta              *v1.EventEnvelope      `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	RiskUuid          string                 `protobuf:"bytes,2,opt,name=risk_uuid,proto3" json:"risk_uuid,omitempty"`
	RiskIncidentUuid  string                 `protobuf:"bytes,3,opt,name=risk_incident_uuid,proto3" json:"risk_incident_uuid,omitempty"`
	Severity          string                 `protobuf:"bytes,4,opt,name=severity,proto3" json:"severity,omitempty"`
	ImpactDescription string                 `protobuf:"bytes,5,opt,name=impact_description,proto3" json:"impact_description,omitempty"`
	MaterializedAt    *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=materialized_at,proto3" json:"materialized_at,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RiskMaterialized) Reset() {
	*x = RiskMaterialized{}
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskMaterialized) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskMaterialized) ProtoMessage() {}

func (x *RiskMaterialized) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskMaterialized.ProtoReflect.Descriptor instead.
func (*RiskMaterialized) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_events_proto_rawDescGZIP(), []int{8}
}

func (x *RiskMaterialized) GetMeta() *v1.EventEnvelope {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RiskMaterialized) GetRiskUuid() string {
	if x != nil {
		return x.RiskUuid
	}
	return ""
}

func (x *RiskMaterialized) GetRiskIncidentUuid() string {
	if x != nil {
		return x.RiskIncidentUuid
	}
	return ""
}

func (x *RiskMaterialized) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *RiskMaterialized) GetImpactDescription() string {
	if x != nil {
		return x.ImpactDescription
	}
	return ""
}

func (x *RiskMaterialized) GetMaterializedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.MaterializedAt
	}
	return nil
}

// --- MITIGATION PLAN EVENTS ---
type RiskMitigationPlanCreated struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Meta                 *v1.EventEnvelope      `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	RiskPlanUuid         string                 `protobuf:"bytes,2,opt,name=risk_plan_uuid,proto3" json:"risk_plan_uuid,omitempty"`
	RiskUuid             string                 `protobuf:"bytes,3,opt,name=risk_uuid,proto3" json:"risk_uuid,omitempty"`
	Name                 string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	OwnerUuid            string                 `protobuf:"bytes,5,opt,name=owner_uuid,proto3" json:"owner_uuid,omitempty"`
	StartDate            *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=start_date,proto3" json:"start_date,omitempty"`
	TargetCompletionDate *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=target_completion_date,proto3" json:"target_completion_date,omitempty"`
	CreatedAt            *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,proto3" json:"created_at,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *RiskMitigationPlanCreated) Reset() {
	*x = RiskMitigationPlanCreated{}
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskMitigationPlanCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskMitigationPlanCreated) ProtoMessage() {}

func (x *RiskMitigationPlanCreated) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskMitigationPlanCreated.ProtoReflect.Descriptor instead.
func (*RiskMitigationPlanCreated) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_events_proto_rawDescGZIP(), []int{9}
}

func (x *RiskMitigationPlanCreated) GetMeta() *v1.EventEnvelope {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RiskMitigationPlanCreated) GetRiskPlanUuid() string {
	if x != nil {
		return x.RiskPlanUuid
	}
	return ""
}

func (x *RiskMitigationPlanCreated) GetRiskUuid() string {
	if x != nil {
		return x.RiskUuid
	}
	return ""
}

func (x *RiskMitigationPlanCreated) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RiskMitigationPlanCreated) GetOwnerUuid() string {
	if x != nil {
		return x.OwnerUuid
	}
	return ""
}

func (x *RiskMitigationPlanCreated) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *RiskMitigationPlanCreated) GetTargetCompletionDate() *timestamppb.Timestamp {
	if x != nil {
		return x.TargetCompletionDate
	}
	return nil
}

func (x *RiskMitigationPlanCreated) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type RiskMitigationPlanUpdated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Meta          *v1.EventEnvelope      `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	RiskPlanUuid  string                 `protobuf:"bytes,2,opt,name=risk_plan_uuid,proto3" json:"risk_plan_uuid,omitempty"`
	UpdatedFields map[string]string      `protobuf:"bytes,3,rep,name=updated_fields,proto3" json:"updated_fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RiskMitigationPlanUpdated) Reset() {
	*x = RiskMitigationPlanUpdated{}
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskMitigationPlanUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskMitigationPlanUpdated) ProtoMessage() {}

func (x *RiskMitigationPlanUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskMitigationPlanUpdated.ProtoReflect.Descriptor instead.
func (*RiskMitigationPlanUpdated) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_events_proto_rawDescGZIP(), []int{10}
}

func (x *RiskMitigationPlanUpdated) GetMeta() *v1.EventEnvelope {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RiskMitigationPlanUpdated) GetRiskPlanUuid() string {
	if x != nil {
		return x.RiskPlanUuid
	}
	return ""
}

func (x *RiskMitigationPlanUpdated) GetUpdatedFields() map[string]string {
	if x != nil {
		return x.UpdatedFields
	}
	return nil
}

func (x *RiskMitigationPlanUpdated) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type RiskMitigationPlanStatusChanged struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Meta           *v1.EventEnvelope      `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	RiskPlanUuid   string                 `protobuf:"bytes,2,opt,name=risk_plan_uuid,proto3" json:"risk_plan_uuid,omitempty"`
	PreviousStatus string                 `protobuf:"bytes,3,opt,name=previous_status,proto3" json:"previous_status,omitempty"`
	NewStatus      string                 `protobuf:"bytes,4,opt,name=new_status,proto3" json:"new_status,omitempty"`
	ChangedBy      string                 `protobuf:"bytes,5,opt,name=changed_by,proto3" json:"changed_by,omitempty"`
	ChangedAt      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=changed_at,proto3" json:"changed_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RiskMitigationPlanStatusChanged) Reset() {
	*x = RiskMitigationPlanStatusChanged{}
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskMitigationPlanStatusChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskMitigationPlanStatusChanged) ProtoMessage() {}

func (x *RiskMitigationPlanStatusChanged) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskMitigationPlanStatusChanged.ProtoReflect.Descriptor instead.
func (*RiskMitigationPlanStatusChanged) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_events_proto_rawDescGZIP(), []int{11}
}

func (x *RiskMitigationPlanStatusChanged) GetMeta() *v1.EventEnvelope {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RiskMitigationPlanStatusChanged) GetRiskPlanUuid() string {
	if x != nil {
		return x.RiskPlanUuid
	}
	return ""
}

func (x *RiskMitigationPlanStatusChanged) GetPreviousStatus() string {
	if x != nil {
		return x.PreviousStatus
	}
	return ""
}

func (x *RiskMitigationPlanStatusChanged) GetNewStatus() string {
	if x != nil {
		return x.NewStatus
	}
	return ""
}

func (x *RiskMitigationPlanStatusChanged) GetChangedBy() string {
	if x != nil {
		return x.ChangedBy
	}
	return ""
}

func (x *RiskMitigationPlanStatusChanged) GetChangedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ChangedAt
	}
	return nil
}

type RiskMitigationActionAdded struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Meta           *v1.EventEnvelope      `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	RiskActionUuid string                 `protobuf:"bytes,2,opt,name=risk_action_uuid,proto3" json:"risk_action_uuid,omitempty"`
	RiskPlanUuid   string                 `protobuf:"bytes,3,opt,name=risk_plan_uuid,proto3" json:"risk_plan_uuid,omitempty"`
	Description    string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	OwnerUuid      string                 `protobuf:"bytes,5,opt,name=owner_uuid,proto3" json:"owner_uuid,omitempty"`
	DueDate        *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=due_date,proto3" json:"due_date,omitempty"`
	AddedAt        *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=added_at,proto3" json:"added_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RiskMitigationActionAdded) Reset() {
	*x = RiskMitigationActionAdded{}
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskMitigationActionAdded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskMitigationActionAdded) ProtoMessage() {}

func (x *RiskMitigationActionAdded) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskMitigationActionAdded.ProtoReflect.Descriptor instead.
func (*RiskMitigationActionAdded) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_events_proto_rawDescGZIP(), []int{12}
}

func (x *RiskMitigationActionAdded) GetMeta() *v1.EventEnvelope {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RiskMitigationActionAdded) GetRiskActionUuid() string {
	if x != nil {
		return x.RiskActionUuid
	}
	return ""
}

func (x *RiskMitigationActionAdded) GetRiskPlanUuid() string {
	if x != nil {
		return x.RiskPlanUuid
	}
	return ""
}

func (x *RiskMitigationActionAdded) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RiskMitigationActionAdded) GetOwnerUuid() string {
	if x != nil {
		return x.OwnerUuid
	}
	return ""
}

func (x *RiskMitigationActionAdded) GetDueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DueDate
	}
	return nil
}

func (x *RiskMitigationActionAdded) GetAddedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AddedAt
	}
	return nil
}

type RiskMitigationActionCompleted struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Meta           *v1.EventEnvelope      `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	RiskActionUuid string                 `protobuf:"bytes,2,opt,name=risk_action_uuid,proto3" json:"risk_action_uuid,omitempty"`
	RiskPlanUuid   string                 `protobuf:"bytes,3,opt,name=risk_plan_uuid,proto3" json:"risk_plan_uuid,omitempty"`
	CompletedBy    string                 `protobuf:"bytes,4,opt,name=completed_by,proto3" json:"completed_by,omitempty"`
	CompletedAt    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=completed_at,proto3" json:"completed_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RiskMitigationActionCompleted) Reset() {
	*x = RiskMitigationActionCompleted{}
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskMitigationActionCompleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskMitigationActionCompleted) ProtoMessage() {}

func (x *RiskMitigationActionCompleted) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskMitigationActionCompleted.ProtoReflect.Descriptor instead.
func (*RiskMitigationActionCompleted) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_events_proto_rawDescGZIP(), []int{13}
}

func (x *RiskMitigationActionCompleted) GetMeta() *v1.EventEnvelope {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RiskMitigationActionCompleted) GetRiskActionUuid() string {
	if x != nil {
		return x.RiskActionUuid
	}
	return ""
}

func (x *RiskMitigationActionCompleted) GetRiskPlanUuid() string {
	if x != nil {
		return x.RiskPlanUuid
	}
	return ""
}

func (x *RiskMitigationActionCompleted) GetCompletedBy() string {
	if x != nil {
		return x.CompletedBy
	}
	return ""
}

func (x *RiskMitigationActionCompleted) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

// --- INCIDENT EVENTS ---
type RiskIncidentCreated struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Meta             *v1.EventEnvelope      `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	RiskIncidentUuid string                 `protobuf:"bytes,2,opt,name=risk_incident_uuid,proto3" json:"risk_incident_uuid,omitempty"`
	RiskUuid         string                 `protobuf:"bytes,3,opt,name=risk_uuid,proto3" json:"risk_uuid,omitempty"`
	Title            string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Severity         string                 `protobuf:"bytes,5,opt,name=severity,proto3" json:"severity,omitempty"`
	ImpactTypes      []string               `protobuf:"bytes,6,rep,name=impact_types,proto3" json:"impact_types,omitempty"`
	OccurredAt       *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=occurred_at,proto3" json:"occurred_at,omitempty"`
	DetectedAt       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=detected_at,proto3" json:"detected_at,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,proto3" json:"created_at,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RiskIncidentCreated) Reset() {
	*x = RiskIncidentCreated{}
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskIncidentCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskIncidentCreated) ProtoMessage() {}

func (x *RiskIncidentCreated) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskIncidentCreated.ProtoReflect.Descriptor instead.
func (*RiskIncidentCreated) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_events_proto_rawDescGZIP(), []int{14}
}

func (x *RiskIncidentCreated) GetMeta() *v1.EventEnvelope {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RiskIncidentCreated) GetRiskIncidentUuid() string {
	if x != nil {
		return x.RiskIncidentUuid
	}
	return ""
}

func (x *RiskIncidentCreated) GetRiskUuid() string {
	if x != nil {
		return x.RiskUuid
	}
	return ""
}

func (x *RiskIncidentCreated) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RiskIncidentCreated) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *RiskIncidentCreated) GetImpactTypes() []string {
	if x != nil {
		return x.ImpactTypes
	}
	return nil
}

func (x *RiskIncidentCreated) GetOccurredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.OccurredAt
	}
	return nil
}

func (x *RiskIncidentCreated) GetDetectedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DetectedAt
	}
	return nil
}

func (x *RiskIncidentCreated) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type RiskIncidentStatusChanged struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Meta             *v1.EventEnvelope      `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	RiskIncidentUuid string                 `protobuf:"bytes,2,opt,name=risk_incident_uuid,proto3" json:"risk_incident_uuid,omitempty"`
	PreviousStatus   string                 `protobuf:"bytes,3,opt,name=previous_status,proto3" json:"previous_status,omitempty"`
	NewStatus        string                 `protobuf:"bytes,4,opt,name=new_status,proto3" json:"new_status,omitempty"`
	ChangedBy        string                 `protobuf:"bytes,5,opt,name=changed_by,proto3" json:"changed_by,omitempty"`
	ChangedAt        *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=changed_at,proto3" json:"changed_at,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RiskIncidentStatusChanged) Reset() {
	*x = RiskIncidentStatusChanged{}
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskIncidentStatusChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskIncidentStatusChanged) ProtoMessage() {}

func (x *RiskIncidentStatusChanged) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskIncidentStatusChanged.ProtoReflect.Descriptor instead.
func (*RiskIncidentStatusChanged) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_events_proto_rawDescGZIP(), []int{15}
}

func (x *RiskIncidentStatusChanged) GetMeta() *v1.EventEnvelope {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RiskIncidentStatusChanged) GetRiskIncidentUuid() string {
	if x != nil {
		return x.RiskIncidentUuid
	}
	return ""
}

func (x *RiskIncidentStatusChanged) GetPreviousStatus() string {
	if x != nil {
		return x.PreviousStatus
	}
	return ""
}

func (x *RiskIncidentStatusChanged) GetNewStatus() string {
	if x != nil {
		return x.NewStatus
	}
	return ""
}

func (x *RiskIncidentStatusChanged) GetChangedBy() string {
	if x != nil {
		return x.ChangedBy
	}
	return ""
}

func (x *RiskIncidentStatusChanged) GetChangedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ChangedAt
	}
	return nil
}

type RiskIncidentResolved struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Meta              *v1.EventEnvelope      `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	RiskIncidentUuid  string                 `protobuf:"bytes,2,opt,name=risk_incident_uuid,proto3" json:"risk_incident_uuid,omitempty"`
	ResolutionSummary string                 `protobuf:"bytes,3,opt,name=resolution_summary,proto3" json:"resolution_summary,omitempty"`
	ResolvedBy        string                 `protobuf:"bytes,4,opt,name=resolved_by,proto3" json:"resolved_by,omitempty"`
	ResolvedAt        *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=resolved_at,proto3" json:"resolved_at,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RiskIncidentResolved) Reset() {
	*x = RiskIncidentResolved{}
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskIncidentResolved) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskIncidentResolved) ProtoMessage() {}

func (x *RiskIncidentResolved) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskIncidentResolved.ProtoReflect.Descriptor instead.
func (*RiskIncidentResolved) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_events_proto_rawDescGZIP(), []int{16}
}

func (x *RiskIncidentResolved) GetMeta() *v1.EventEnvelope {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RiskIncidentResolved) GetRiskIncidentUuid() string {
	if x != nil {
		return x.RiskIncidentUuid
	}
	return ""
}

func (x *RiskIncidentResolved) GetResolutionSummary() string {
	if x != nil {
		return x.ResolutionSummary
	}
	return ""
}

func (x *RiskIncidentResolved) GetResolvedBy() string {
	if x != nil {
		return x.ResolvedBy
	}
	return ""
}

func (x *RiskIncidentResolved) GetResolvedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ResolvedAt
	}
	return nil
}

type RiskIncidentImpactUpdated struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	Meta                    *v1.EventEnvelope      `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	RiskIncidentUuid        string                 `protobuf:"bytes,2,opt,name=risk_incident_uuid,proto3" json:"risk_incident_uuid,omitempty"`
	ImpactDescription       string                 `protobuf:"bytes,3,opt,name=impact_description,proto3" json:"impact_description,omitempty"`
	FinancialImpact         float64                `protobuf:"fixed64,4,opt,name=financial_impact,proto3" json:"financial_impact,omitempty"`
	FinancialImpactCurrency string                 `protobuf:"bytes,5,opt,name=financial_impact_currency,proto3" json:"financial_impact_currency,omitempty"`
	UpdatedAt               *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,proto3" json:"updated_at,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *RiskIncidentImpactUpdated) Reset() {
	*x = RiskIncidentImpactUpdated{}
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskIncidentImpactUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskIncidentImpactUpdated) ProtoMessage() {}

func (x *RiskIncidentImpactUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskIncidentImpactUpdated.ProtoReflect.Descriptor instead.
func (*RiskIncidentImpactUpdated) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_events_proto_rawDescGZIP(), []int{17}
}

func (x *RiskIncidentImpactUpdated) GetMeta() *v1.EventEnvelope {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RiskIncidentImpactUpdated) GetRiskIncidentUuid() string {
	if x != nil {
		return x.RiskIncidentUuid
	}
	return ""
}

func (x *RiskIncidentImpactUpdated) GetImpactDescription() string {
	if x != nil {
		return x.ImpactDescription
	}
	return ""
}

func (x *RiskIncidentImpactUpdated) GetFinancialImpact() float64 {
	if x != nil {
		return x.FinancialImpact
	}
	return 0
}

func (x *RiskIncidentImpactUpdated) GetFinancialImpactCurrency() string {
	if x != nil {
		return x.FinancialImpactCurrency
	}
	return ""
}

func (x *RiskIncidentImpactUpdated) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// --- ASSESSMENT EVENTS ---
type RiskAssessmentCreated struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Meta               *v1.EventEnvelope      `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	RiskAssessmentUuid string                 `protobuf:"bytes,2,opt,name=risk_assessment_uuid,proto3" json:"risk_assessment_uuid,omitempty"`
	Name               string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ScopeType          string                 `protobuf:"bytes,4,opt,name=scope_type,proto3" json:"scope_type,omitempty"`
	ScopeUuid          string                 `protobuf:"bytes,5,opt,name=scope_uuid,proto3" json:"scope_uuid,omitempty"`
	AssessmentMethod   string                 `protobuf:"bytes,6,opt,name=assessment_method,proto3" json:"assessment_method,omitempty"`
	ConductedBy        string                 `protobuf:"bytes,7,opt,name=conducted_by,proto3" json:"conducted_by,omitempty"`
	AssessmentDate     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=assessment_date,proto3" json:"assessment_date,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,proto3" json:"created_at,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *RiskAssessmentCreated) Reset() {
	*x = RiskAssessmentCreated{}
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskAssessmentCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskAssessmentCreated) ProtoMessage() {}

func (x *RiskAssessmentCreated) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskAssessmentCreated.ProtoReflect.Descriptor instead.
func (*RiskAssessmentCreated) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_events_proto_rawDescGZIP(), []int{18}
}

func (x *RiskAssessmentCreated) GetMeta() *v1.EventEnvelope {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RiskAssessmentCreated) GetRiskAssessmentUuid() string {
	if x != nil {
		return x.RiskAssessmentUuid
	}
	return ""
}

func (x *RiskAssessmentCreated) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RiskAssessmentCreated) GetScopeType() string {
	if x != nil {
		return x.ScopeType
	}
	return ""
}

func (x *RiskAssessmentCreated) GetScopeUuid() string {
	if x != nil {
		return x.ScopeUuid
	}
	return ""
}

func (x *RiskAssessmentCreated) GetAssessmentMethod() string {
	if x != nil {
		return x.AssessmentMethod
	}
	return ""
}

func (x *RiskAssessmentCreated) GetConductedBy() string {
	if x != nil {
		return x.ConductedBy
	}
	return ""
}

func (x *RiskAssessmentCreated) GetAssessmentDate() *timestamppb.Timestamp {
	if x != nil {
		return x.AssessmentDate
	}
	return nil
}

func (x *RiskAssessmentCreated) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type RiskAssessmentCompleted struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Meta               *v1.EventEnvelope      `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	RiskAssessmentUuid string                 `protobuf:"bytes,2,opt,name=risk_assessment_uuid,proto3" json:"risk_assessment_uuid,omitempty"`
	RisksIdentified    int32                  `protobuf:"varint,3,opt,name=risks_identified,proto3" json:"risks_identified,omitempty"`
	Summary            string                 `protobuf:"bytes,4,opt,name=summary,proto3" json:"summary,omitempty"`
	CompletedBy        string                 `protobuf:"bytes,5,opt,name=completed_by,proto3" json:"completed_by,omitempty"`
	CompletedAt        *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=completed_at,proto3" json:"completed_at,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *RiskAssessmentCompleted) Reset() {
	*x = RiskAssessmentCompleted{}
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskAssessmentCompleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskAssessmentCompleted) ProtoMessage() {}

func (x *RiskAssessmentCompleted) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskAssessmentCompleted.ProtoReflect.Descriptor instead.
func (*RiskAssessmentCompleted) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_events_proto_rawDescGZIP(), []int{19}
}

func (x *RiskAssessmentCompleted) GetMeta() *v1.EventEnvelope {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RiskAssessmentCompleted) GetRiskAssessmentUuid() string {
	if x != nil {
		return x.RiskAssessmentUuid
	}
	return ""
}

func (x *RiskAssessmentCompleted) GetRisksIdentified() int32 {
	if x != nil {
		return x.RisksIdentified
	}
	return 0
}

func (x *RiskAssessmentCompleted) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *RiskAssessmentCompleted) GetCompletedBy() string {
	if x != nil {
		return x.CompletedBy
	}
	return ""
}

func (x *RiskAssessmentCompleted) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

type RiskAssessmentApproved struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Meta               *v1.EventEnvelope      `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	RiskAssessmentUuid string                 `protobuf:"bytes,2,opt,name=risk_assessment_uuid,proto3" json:"risk_assessment_uuid,omitempty"`
	ApprovedBy         string                 `protobuf:"bytes,3,opt,name=approved_by,proto3" json:"approved_by,omitempty"`
	ApprovedAt         *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=approved_at,proto3" json:"approved_at,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *RiskAssessmentApproved) Reset() {
	*x = RiskAssessmentApproved{}
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskAssessmentApproved) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskAssessmentApproved) ProtoMessage() {}

func (x *RiskAssessmentApproved) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskAssessmentApproved.ProtoReflect.Descriptor instead.
func (*RiskAssessmentApproved) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_events_proto_rawDescGZIP(), []int{20}
}

func (x *RiskAssessmentApproved) GetMeta() *v1.EventEnvelope {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RiskAssessmentApproved) GetRiskAssessmentUuid() string {
	if x != nil {
		return x.RiskAssessmentUuid
	}
	return ""
}

func (x *RiskAssessmentApproved) GetApprovedBy() string {
	if x != nil {
		return x.ApprovedBy
	}
	return ""
}

func (x *RiskAssessmentApproved) GetApprovedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ApprovedAt
	}
	return nil
}

// --- MONITORING EVENTS ---
type RiskMonitoringRuleCreated struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	Meta                    *v1.EventEnvelope      `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	RiskRuleUuid            string                 `protobuf:"bytes,2,opt,name=risk_rule_uuid,proto3" json:"risk_rule_uuid,omitempty"`
	Name                    string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Category                string                 `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	MinSeverity             string                 `protobuf:"bytes,5,opt,name=min_severity,proto3" json:"min_severity,omitempty"`
	MinProbability          string                 `protobuf:"bytes,6,opt,name=min_probability,proto3" json:"min_probability,omitempty"`
	MinRiskScore            float64                `protobuf:"fixed64,7,opt,name=min_risk_score,proto3" json:"min_risk_score,omitempty"`
	MonitoringFrequencyDays int32                  `protobuf:"varint,8,opt,name=monitoring_frequency_days,proto3" json:"monitoring_frequency_days,omitempty"`
	CreatedAt               *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,proto3" json:"created_at,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *RiskMonitoringRuleCreated) Reset() {
	*x = RiskMonitoringRuleCreated{}
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskMonitoringRuleCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskMonitoringRuleCreated) ProtoMessage() {}

func (x *RiskMonitoringRuleCreated) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskMonitoringRuleCreated.ProtoReflect.Descriptor instead.
func (*RiskMonitoringRuleCreated) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_events_proto_rawDescGZIP(), []int{21}
}

func (x *RiskMonitoringRuleCreated) GetMeta() *v1.EventEnvelope {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RiskMonitoringRuleCreated) GetRiskRuleUuid() string {
	if x != nil {
		return x.RiskRuleUuid
	}
	return ""
}

func (x *RiskMonitoringRuleCreated) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RiskMonitoringRuleCreated) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *RiskMonitoringRuleCreated) GetMinSeverity() string {
	if x != nil {
		return x.MinSeverity
	}
	return ""
}

func (x *RiskMonitoringRuleCreated) GetMinProbability() string {
	if x != nil {
		return x.MinProbability
	}
	return ""
}

func (x *RiskMonitoringRuleCreated) GetMinRiskScore() float64 {
	if x != nil {
		return x.MinRiskScore
	}
	return 0
}

func (x *RiskMonitoringRuleCreated) GetMonitoringFrequencyDays() int32 {
	if x != nil {
		return x.MonitoringFrequencyDays
	}
	return 0
}

func (x *RiskMonitoringRuleCreated) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type RiskMonitoringRuleUpdated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Meta          *v1.EventEnvelope      `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	RiskRuleUuid  string                 `protobuf:"bytes,2,opt,name=risk_rule_uuid,proto3" json:"risk_rule_uuid,omitempty"`
	UpdatedFields map[string]string      `protobuf:"bytes,3,rep,name=updated_fields,proto3" json:"updated_fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RiskMonitoringRuleUpdated) Reset() {
	*x = RiskMonitoringRuleUpdated{}
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskMonitoringRuleUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskMonitoringRuleUpdated) ProtoMessage() {}

func (x *RiskMonitoringRuleUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskMonitoringRuleUpdated.ProtoReflect.Descriptor instead.
func (*RiskMonitoringRuleUpdated) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_events_proto_rawDescGZIP(), []int{22}
}

func (x *RiskMonitoringRuleUpdated) GetMeta() *v1.EventEnvelope {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RiskMonitoringRuleUpdated) GetRiskRuleUuid() string {
	if x != nil {
		return x.RiskRuleUuid
	}
	return ""
}

func (x *RiskMonitoringRuleUpdated) GetUpdatedFields() map[string]string {
	if x != nil {
		return x.UpdatedFields
	}
	return nil
}

func (x *RiskMonitoringRuleUpdated) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type RiskMonitoringRuleActivated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Meta          *v1.EventEnvelope      `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	RiskRuleUuid  string                 `protobuf:"bytes,2,opt,name=risk_rule_uuid,proto3" json:"risk_rule_uuid,omitempty"`
	ActivatedBy   string                 `protobuf:"bytes,3,opt,name=activated_by,proto3" json:"activated_by,omitempty"`
	ActivatedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=activated_at,proto3" json:"activated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RiskMonitoringRuleActivated) Reset() {
	*x = RiskMonitoringRuleActivated{}
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskMonitoringRuleActivated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskMonitoringRuleActivated) ProtoMessage() {}

func (x *RiskMonitoringRuleActivated) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskMonitoringRuleActivated.ProtoReflect.Descriptor instead.
func (*RiskMonitoringRuleActivated) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_events_proto_rawDescGZIP(), []int{23}
}

func (x *RiskMonitoringRuleActivated) GetMeta() *v1.EventEnvelope {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RiskMonitoringRuleActivated) GetRiskRuleUuid() string {
	if x != nil {
		return x.RiskRuleUuid
	}
	return ""
}

func (x *RiskMonitoringRuleActivated) GetActivatedBy() string {
	if x != nil {
		return x.ActivatedBy
	}
	return ""
}

func (x *RiskMonitoringRuleActivated) GetActivatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ActivatedAt
	}
	return nil
}

type RiskMonitoringRuleDeactivated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Meta          *v1.EventEnvelope      `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	RiskRuleUuid  string                 `protobuf:"bytes,2,opt,name=risk_rule_uuid,proto3" json:"risk_rule_uuid,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	DeactivatedBy string                 `protobuf:"bytes,4,opt,name=deactivated_by,proto3" json:"deactivated_by,omitempty"`
	DeactivatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=deactivated_at,proto3" json:"deactivated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RiskMonitoringRuleDeactivated) Reset() {
	*x = RiskMonitoringRuleDeactivated{}
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskMonitoringRuleDeactivated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskMonitoringRuleDeactivated) ProtoMessage() {}

func (x *RiskMonitoringRuleDeactivated) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskMonitoringRuleDeactivated.ProtoReflect.Descriptor instead.
func (*RiskMonitoringRuleDeactivated) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_events_proto_rawDescGZIP(), []int{24}
}

func (x *RiskMonitoringRuleDeactivated) GetMeta() *v1.EventEnvelope {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RiskMonitoringRuleDeactivated) GetRiskRuleUuid() string {
	if x != nil {
		return x.RiskRuleUuid
	}
	return ""
}

func (x *RiskMonitoringRuleDeactivated) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *RiskMonitoringRuleDeactivated) GetDeactivatedBy() string {
	if x != nil {
		return x.DeactivatedBy
	}
	return ""
}

func (x *RiskMonitoringRuleDeactivated) GetDeactivatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeactivatedAt
	}
	return nil
}

type RiskThresholdExceeded struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Meta          *v1.EventEnvelope      `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	RiskUuid      string                 `protobuf:"bytes,2,opt,name=risk_uuid,proto3" json:"risk_uuid,omitempty"`
	RiskRuleUuid  string                 `protobuf:"bytes,3,opt,name=risk_rule_uuid,proto3" json:"risk_rule_uuid,omitempty"`
	ThresholdType string                 `protobuf:"bytes,4,opt,name=threshold_type,proto3" json:"threshold_type,omitempty"` // "severity", "probability", "score"
	PreviousValue string                 `protobuf:"bytes,5,opt,name=previous_value,proto3" json:"previous_value,omitempty"`
	CurrentValue  string                 `protobuf:"bytes,6,opt,name=current_value,proto3" json:"current_value,omitempty"`
	DetectedAt    *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=detected_at,proto3" json:"detected_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RiskThresholdExceeded) Reset() {
	*x = RiskThresholdExceeded{}
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskThresholdExceeded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskThresholdExceeded) ProtoMessage() {}

func (x *RiskThresholdExceeded) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskThresholdExceeded.ProtoReflect.Descriptor instead.
func (*RiskThresholdExceeded) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_events_proto_rawDescGZIP(), []int{25}
}

func (x *RiskThresholdExceeded) GetMeta() *v1.EventEnvelope {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RiskThresholdExceeded) GetRiskUuid() string {
	if x != nil {
		return x.RiskUuid
	}
	return ""
}

func (x *RiskThresholdExceeded) GetRiskRuleUuid() string {
	if x != nil {
		return x.RiskRuleUuid
	}
	return ""
}

func (x *RiskThresholdExceeded) GetThresholdType() string {
	if x != nil {
		return x.ThresholdType
	}
	return ""
}

func (x *RiskThresholdExceeded) GetPreviousValue() string {
	if x != nil {
		return x.PreviousValue
	}
	return ""
}

func (x *RiskThresholdExceeded) GetCurrentValue() string {
	if x != nil {
		return x.CurrentValue
	}
	return ""
}

func (x *RiskThresholdExceeded) GetDetectedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DetectedAt
	}
	return nil
}

// --- KPI EVENTS ---
type RiskKPICreated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Meta          *v1.EventEnvelope      `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	RiskKpiUuid   string                 `protobuf:"bytes,2,opt,name=risk_kpi_uuid,proto3" json:"risk_kpi_uuid,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	MetricType    string                 `protobuf:"bytes,4,opt,name=metric_type,proto3" json:"metric_type,omitempty"`
	TargetValue   float64                `protobuf:"fixed64,5,opt,name=target_value,proto3" json:"target_value,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RiskKPICreated) Reset() {
	*x = RiskKPICreated{}
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskKPICreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskKPICreated) ProtoMessage() {}

func (x *RiskKPICreated) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskKPICreated.ProtoReflect.Descriptor instead.
func (*RiskKPICreated) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_events_proto_rawDescGZIP(), []int{26}
}

func (x *RiskKPICreated) GetMeta() *v1.EventEnvelope {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RiskKPICreated) GetRiskKpiUuid() string {
	if x != nil {
		return x.RiskKpiUuid
	}
	return ""
}

func (x *RiskKPICreated) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RiskKPICreated) GetMetricType() string {
	if x != nil {
		return x.MetricType
	}
	return ""
}

func (x *RiskKPICreated) GetTargetValue() float64 {
	if x != nil {
		return x.TargetValue
	}
	return 0
}

func (x *RiskKPICreated) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type RiskKPIUpdated struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Meta            *v1.EventEnvelope      `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	RiskKpiUuid     string                 `protobuf:"bytes,2,opt,name=risk_kpi_uuid,proto3" json:"risk_kpi_uuid,omitempty"`
	PreviousValue   float64                `protobuf:"fixed64,3,opt,name=previous_value,proto3" json:"previous_value,omitempty"`
	CurrentValue    float64                `protobuf:"fixed64,4,opt,name=current_value,proto3" json:"current_value,omitempty"`
	Status          string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	MeasurementDate *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=measurement_date,proto3" json:"measurement_date,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,proto3" json:"updated_at,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RiskKPIUpdated) Reset() {
	*x = RiskKPIUpdated{}
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskKPIUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskKPIUpdated) ProtoMessage() {}

func (x *RiskKPIUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scg_risk_v1_events_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskKPIUpdated.ProtoReflect.Descriptor instead.
func (*RiskKPIUpdated) Descriptor() ([]byte, []int) {
	return file_proto_scg_risk_v1_events_proto_rawDescGZIP(), []int{27}
}

func (x *RiskKPIUpdated) GetMeta() *v1.EventEnvelope {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RiskKPIUpdated) GetRiskKpiUuid() string {
	if x != nil {
		return x.RiskKpiUuid
	}
	return ""
}

func (x *RiskKPIUpdated) GetPreviousValue() float64 {
	if x != nil {
		return x.PreviousValue
	}
	return 0
}

func (x *RiskKPIUpdated) GetCurrentValue() float64 {
	if x != nil {
		return x.CurrentValue
	}
	return 0
}

func (x *RiskKPIUpdated) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RiskKPIUpdated) GetMeasurementDate() *timestamppb.Timestamp {
	if x != nil {
		return x.MeasurementDate
	}
	return nil
}

func (x *RiskKPIUpdated) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_proto_scg_risk_v1_events_proto protoreflect.FileDescriptor

const file_proto_scg_risk_v1_events_proto_rawDesc = "" +
	"\n" +
	"\x1eproto/scg/risk/v1/events.proto\x12\x11proto.scg.risk.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a proto/scg/shared/v1/events.proto\"\x80\x03\n" +
	"\x0eRiskIdentified\x126\n" +
	"\x04meta\x18\x01 \x01(\v2\".proto.scg.shared.v1.EventEnvelopeR\x04meta\x12\x1c\n" +
	"\trisk_uuid\x18\x02 \x01(\tR\trisk_uuid\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1a\n" +
	"\bcategory\x18\x04 \x01(\tR\bcategory\x12\x1a\n" +
	"\bseverity\x18\x05 \x01(\tR\bseverity\x12 \n" +
	"\vprobability\x18\x06 \x01(\tR\vprobability\x12 \n" +
	"\ventity_type\x18\a \x01(\tR\ventity_type\x12 \n" +
	"\ventity_uuid\x18\b \x01(\tR\ventity_uuid\x12$\n" +
	"\ridentified_by\x18\t \x01(\tR\ridentified_by\x12@\n" +
	"\ridentified_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\ridentified_at\"\xd0\x02\n" +
	"\fRiskAssessed\x126\n" +
	"\x04meta\x18\x01 \x01(\v2\".proto.scg.shared.v1.EventEnvelopeR\x04meta\x12\x1c\n" +
	"\trisk_uuid\x18\x02 \x01(\tR\trisk_uuid\x12\x1a\n" +
	"\bseverity\x18\x03 \x01(\tR\bseverity\x12 \n" +
	"\vprobability\x18\x04 \x01(\tR\vprobability\x12\x1e\n" +
	"\n" +
	"risk_score\x18\x05 \x01(\x01R\n" +
	"risk_score\x12,\n" +
	"\x11assessment_method\x18\x06 \x01(\tR\x11assessment_method\x12 \n" +
	"\vassessed_by\x18\a \x01(\tR\vassessed_by\x12<\n" +
	"\vassessed_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\vassessed_at\"\xc1\x02\n" +
	"\x13RiskSeverityChanged\x126\n" +
	"\x04meta\x18\x01 \x01(\v2\".proto.scg.shared.v1.EventEnvelopeR\x04meta\x12\x1c\n" +
	"\trisk_uuid\x18\x02 \x01(\tR\trisk_uuid\x12,\n" +
	"\x11previous_severity\x18\x03 \x01(\tR\x11previous_severity\x12\"\n" +
	"\fnew_severity\x18\x04 \x01(\tR\fnew_severity\x12&\n" +
	"\x0enew_risk_score\x18\x05 \x01(\x01R\x0enew_risk_score\x12\x1e\n" +
	"\n" +
	"changed_by\x18\x06 \x01(\tR\n" +
	"changed_by\x12:\n" +
	"\n" +
	"changed_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"changed_at\"\xd0\x02\n" +
	"\x16RiskProbabilityChanged\x126\n" +
	"\x04meta\x18\x01 \x01(\v2\".proto.scg.shared.v1.EventEnvelopeR\x04meta\x12\x1c\n" +
	"\trisk_uuid\x18\x02 \x01(\tR\trisk_uuid\x122\n" +
	"\x14previous_probability\x18\x03 \x01(\tR\x14previous_probability\x12(\n" +
	"\x0fnew_probability\x18\x04 \x01(\tR\x0fnew_probability\x12&\n" +
	"\x0enew_risk_score\x18\x05 \x01(\x01R\x0enew_risk_score\x12\x1e\n" +
	"\n" +
	"changed_by\x18\x06 \x01(\tR\n" +
	"changed_by\x12:\n" +
	"\n" +
	"changed_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"changed_at\"\xa7\x02\n" +
	"\x11RiskStatusChanged\x126\n" +
	"\x04meta\x18\x01 \x01(\v2\".proto.scg.shared.v1.EventEnvelopeR\x04meta\x12\x1c\n" +
	"\trisk_uuid\x18\x02 \x01(\tR\trisk_uuid\x12(\n" +
	"\x0fprevious_status\x18\x03 \x01(\tR\x0fprevious_status\x12\x1e\n" +
	"\n" +
	"new_status\x18\x04 \x01(\tR\n" +
	"new_status\x12\x16\n" +
	"\x06reason\x18\x05 \x01(\tR\x06reason\x12\x1e\n" +
	"\n" +
	"changed_by\x18\x06 \x01(\tR\n" +
	"changed_by\x12:\n" +
	"\n" +
	"changed_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"changed_at\"\xfd\x01\n" +
	"\rRiskMitigated\x126\n" +
	"\x04meta\x18\x01 \x01(\v2\".proto.scg.shared.v1.EventEnvelopeR\x04meta\x12\x1c\n" +
	"\trisk_uuid\x18\x02 \x01(\tR\trisk_uuid\x122\n" +
	"\x14mitigation_plan_uuid\x18\x03 \x01(\tR\x14mitigation_plan_uuid\x12\"\n" +
	"\fmitigated_by\x18\x04 \x01(\tR\fmitigated_by\x12>\n" +
	"\fmitigated_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\fmitigated_at\"\xdc\x01\n" +
	"\fRiskAccepted\x126\n" +
	"\x04meta\x18\x01 \x01(\v2\".proto.scg.shared.v1.EventEnvelopeR\x04meta\x12\x1c\n" +
	"\trisk_uuid\x18\x02 \x01(\tR\trisk_uuid\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\x12 \n" +
	"\vaccepted_by\x18\x04 \x01(\tR\vaccepted_by\x12<\n" +
	"\vaccepted_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\vaccepted_at\"\xa5\x02\n" +
	"\x0fRiskTransferred\x126\n" +
	"\x04meta\x18\x01 \x01(\v2\".proto.scg.shared.v1.EventEnvelopeR\x04meta\x12\x1c\n" +
	"\trisk_uuid\x18\x02 \x01(\tR\trisk_uuid\x12(\n" +
	"\x0ftransfer_method\x18\x03 \x01(\tR\x0ftransfer_method\x12&\n" +
	"\x0etransferred_to\x18\x04 \x01(\tR\x0etransferred_to\x12&\n" +
	"\x0etransferred_by\x18\x05 \x01(\tR\x0etransferred_by\x12B\n" +
	"\x0etransferred_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x0etransferred_at\"\xaa\x02\n" +
	"\x10RiskMaterialized\x126\n" +
	"\x04meta\x18\x01 \x01(\v2\".proto.scg.shared.v1.EventEnvelopeR\x04meta\x12\x1c\n" +
	"\trisk_uuid\x18\x02 \x01(\tR\trisk_uuid\x12.\n" +
	"\x12risk_incident_uuid\x18\x03 \x01(\tR\x12risk_incident_uuid\x12\x1a\n" +
	"\bseverity\x18\x04 \x01(\tR\bseverity\x12.\n" +
	"\x12impact_description\x18\x05 \x01(\tR\x12impact_description\x12D\n" +
	"\x0fmaterialized_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x0fmaterialized_at\"\x99\x03\n" +
	"\x19RiskMitigationPlanCreated\x126\n" +
	"\x04meta\x18\x01 \x01(\v2\".proto.scg.shared.v1.EventEnvelopeR\x04meta\x12&\n" +
	"\x0erisk_plan_uuid\x18\x02 \x01(\tR\x0erisk_plan_uuid\x12\x1c\n" +
	"\trisk_uuid\x18\x03 \x01(\tR\trisk_uuid\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12\x1e\n" +
	"\n" +
	"owner_uuid\x18\x05 \x01(\tR\n" +
	"owner_uuid\x12:\n" +
	"\n" +
	"start_date\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"start_date\x12R\n" +
	"\x16target_completion_date\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x16target_completion_date\x12:\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"created_at\"\xe2\x02\n" +
	"\x19RiskMitigationPlanUpdated\x126\n" +
	"\x04meta\x18\x01 \x01(\v2\".proto.scg.shared.v1.EventEnvelopeR\x04meta\x12&\n" +
	"\x0erisk_plan_uuid\x18\x02 \x01(\tR\x0erisk_plan_uuid\x12g\n" +
	"\x0eupdated_fields\x18\x03 \x03(\v2?.proto.scg.risk.v1.RiskMitigationPlanUpdated.UpdatedFieldsEntryR\x0eupdated_fields\x12:\n" +
	"\n" +
	"updated_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"updated_at\x1a@\n" +
	"\x12UpdatedFieldsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa7\x02\n" +
	"\x1fRiskMitigationPlanStatusChanged\x126\n" +
	"\x04meta\x18\x01 \x01(\v2\".proto.scg.shared.v1.EventEnvelopeR\x04meta\x12&\n" +
	"\x0erisk_plan_uuid\x18\x02 \x01(\tR\x0erisk_plan_uuid\x12(\n" +
	"\x0fprevious_status\x18\x03 \x01(\tR\x0fprevious_status\x12\x1e\n" +
	"\n" +
	"new_status\x18\x04 \x01(\tR\n" +
	"new_status\x12\x1e\n" +
	"\n" +
	"changed_by\x18\x05 \x01(\tR\n" +
	"changed_by\x12:\n" +
	"\n" +
	"changed_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"changed_at\"\xd9\x02\n" +
	"\x19RiskMitigationActionAdded\x126\n" +
	"\x04meta\x18\x01 \x01(\v2\".proto.scg.shared.v1.EventEnvelopeR\x04meta\x12*\n" +
	"\x10risk_action_uuid\x18\x02 \x01(\tR\x10risk_action_uuid\x12&\n" +
	"\x0erisk_plan_uuid\x18\x03 \x01(\tR\x0erisk_plan_uuid\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x1e\n" +
	"\n" +
	"owner_uuid\x18\x05 \x01(\tR\n" +
	"owner_uuid\x126\n" +
	"\bdue_date\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\bdue_date\x126\n" +
	"\badded_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\badded_at\"\x8f\x02\n" +
	"\x1dRiskMitigationActionCompleted\x126\n" +
	"\x04meta\x18\x01 \x01(\v2\".proto.scg.shared.v1.EventEnvelopeR\x04meta\x12*\n" +
	"\x10risk_action_uuid\x18\x02 \x01(\tR\x10risk_action_uuid\x12&\n" +
	"\x0erisk_plan_uuid\x18\x03 \x01(\tR\x0erisk_plan_uuid\x12\"\n" +
	"\fcompleted_by\x18\x04 \x01(\tR\fcompleted_by\x12>\n" +
	"\fcompleted_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\fcompleted_at\"\xa9\x03\n" +
	"\x13RiskIncidentCreated\x126\n" +
	"\x04meta\x18\x01 \x01(\v2\".proto.scg.shared.v1.EventEnvelopeR\x04meta\x12.\n" +
	"\x12risk_incident_uuid\x18\x02 \x01(\tR\x12risk_incident_uuid\x12\x1c\n" +
	"\trisk_uuid\x18\x03 \x01(\tR\trisk_uuid\x12\x14\n" +
	"\x05title\x18\x04 \x01(\tR\x05title\x12\x1a\n" +
	"\bseverity\x18\x05 \x01(\tR\bseverity\x12\"\n" +
	"\fimpact_types\x18\x06 \x03(\tR\fimpact_types\x12<\n" +
	"\voccurred_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\voccurred_at\x12<\n" +
	"\vdetected_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\vdetected_at\x12:\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"created_at\"\xa9\x02\n" +
	"\x19RiskIncidentStatusChanged\x126\n" +
	"\x04meta\x18\x01 \x01(\v2\".proto.scg.shared.v1.EventEnvelopeR\x04meta\x12.\n" +
	"\x12risk_incident_uuid\x18\x02 \x01(\tR\x12risk_incident_uuid\x12(\n" +
	"\x0fprevious_status\x18\x03 \x01(\tR\x0fprevious_status\x12\x1e\n" +
	"\n" +
	"new_status\x18\x04 \x01(\tR\n" +
	"new_status\x12\x1e\n" +
	"\n" +
	"changed_by\x18\x05 \x01(\tR\n" +
	"changed_by\x12:\n" +
	"\n" +
	"changed_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"changed_at\"\x8e\x02\n" +
	"\x14RiskIncidentResolved\x126\n" +
	"\x04meta\x18\x01 \x01(\v2\".proto.scg.shared.v1.EventEnvelopeR\x04meta\x12.\n" +
	"\x12risk_incident_uuid\x18\x02 \x01(\tR\x12risk_incident_uuid\x12.\n" +
	"\x12resolution_summary\x18\x03 \x01(\tR\x12resolution_summary\x12 \n" +
	"\vresolved_by\x18\x04 \x01(\tR\vresolved_by\x12<\n" +
	"\vresolved_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\vresolved_at\"\xd9\x02\n" +
	"\x19RiskIncidentImpactUpdated\x126\n" +
	"\x04meta\x18\x01 \x01(\v2\".proto.scg.shared.v1.EventEnvelopeR\x04meta\x12.\n" +
	"\x12risk_incident_uuid\x18\x02 \x01(\tR\x12risk_incident_uuid\x12.\n" +
	"\x12impact_description\x18\x03 \x01(\tR\x12impact_description\x12*\n" +
	"\x10financial_impact\x18\x04 \x01(\x01R\x10financial_impact\x12<\n" +
	"\x19financial_impact_currency\x18\x05 \x01(\tR\x19financial_impact_currency\x12:\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"updated_at\"\xab\x03\n" +
	"\x15RiskAssessmentCreated\x126\n" +
	"\x04meta\x18\x01 \x01(\v2\".proto.scg.shared.v1.EventEnvelopeR\x04meta\x122\n" +
	"\x14risk_assessment_uuid\x18\x02 \x01(\tR\x14risk_assessment_uuid\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1e\n" +
	"\n" +
	"scope_type\x18\x04 \x01(\tR\n" +
	"scope_type\x12\x1e\n" +
	"\n" +
	"scope_uuid\x18\x05 \x01(\tR\n" +
	"scope_uuid\x12,\n" +
	"\x11assessment_method\x18\x06 \x01(\tR\x11assessment_method\x12\"\n" +
	"\fconducted_by\x18\a \x01(\tR\fconducted_by\x12D\n" +
	"\x0fassessment_date\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\x0fassessment_date\x12:\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"created_at\"\xaf\x02\n" +
	"\x17RiskAssessmentCompleted\x126\n" +
	"\x04meta\x18\x01 \x01(\v2\".proto.scg.shared.v1.EventEnvelopeR\x04meta\x122\n" +
	"\x14risk_assessment_uuid\x18\x02 \x01(\tR\x14risk_assessment_uuid\x12*\n" +
	"\x10risks_identified\x18\x03 \x01(\x05R\x10risks_identified\x12\x18\n" +
	"\asummary\x18\x04 \x01(\tR\asummary\x12\"\n" +
	"\fcompleted_by\x18\x05 \x01(\tR\fcompleted_by\x12>\n" +
	"\fcompleted_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\fcompleted_at\"\xe4\x01\n" +
	"\x16RiskAssessmentApproved\x126\n" +
	"\x04meta\x18\x01 \x01(\v2\".proto.scg.shared.v1.EventEnvelopeR\x04meta\x122\n" +
	"\x14risk_assessment_uuid\x18\x02 \x01(\tR\x14risk_assessment_uuid\x12 \n" +
	"\vapproved_by\x18\x03 \x01(\tR\vapproved_by\x12<\n" +
	"\vapproved_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\vapproved_at\"\x9b\x03\n" +
	"\x19RiskMonitoringRuleCreated\x126\n" +
	"\x04meta\x18\x01 \x01(\v2\".proto.scg.shared.v1.EventEnvelopeR\x04meta\x12&\n" +
	"\x0erisk_rule_uuid\x18\x02 \x01(\tR\x0erisk_rule_uuid\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1a\n" +
	"\bcategory\x18\x04 \x01(\tR\bcategory\x12\"\n" +
	"\fmin_severity\x18\x05 \x01(\tR\fmin_severity\x12(\n" +
	"\x0fmin_probability\x18\x06 \x01(\tR\x0fmin_probability\x12&\n" +
	"\x0emin_risk_score\x18\a \x01(\x01R\x0emin_risk_score\x12<\n" +
	"\x19monitoring_frequency_days\x18\b \x01(\x05R\x19monitoring_frequency_days\x12:\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"created_at\"\xe2\x02\n" +
	"\x19RiskMonitoringRuleUpdated\x126\n" +
	"\x04meta\x18\x01 \x01(\v2\".proto.scg.shared.v1.EventEnvelopeR\x04meta\x12&\n" +
	"\x0erisk_rule_uuid\x18\x02 \x01(\tR\x0erisk_rule_uuid\x12g\n" +
	"\x0eupdated_fields\x18\x03 \x03(\v2?.proto.scg.risk.v1.RiskMonitoringRuleUpdated.UpdatedFieldsEntryR\x0eupdated_fields\x12:\n" +
	"\n" +
	"updated_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"updated_at\x1a@\n" +
	"\x12UpdatedFieldsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe1\x01\n" +
	"\x1bRiskMonitoringRuleActivated\x126\n" +
	"\x04meta\x18\x01 \x01(\v2\".proto.scg.shared.v1.EventEnvelopeR\x04meta\x12&\n" +
	"\x0erisk_rule_uuid\x18\x02 \x01(\tR\x0erisk_rule_uuid\x12\"\n" +
	"\factivated_by\x18\x03 \x01(\tR\factivated_by\x12>\n" +
	"\factivated_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\factivated_at\"\x83\x02\n" +
	"\x1dRiskMonitoringRuleDeactivated\x126\n" +
	"\x04meta\x18\x01 \x01(\v2\".proto.scg.shared.v1.EventEnvelopeR\x04meta\x12&\n" +
	"\x0erisk_rule_uuid\x18\x02 \x01(\tR\x0erisk_rule_uuid\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\x12&\n" +
	"\x0edeactivated_by\x18\x04 \x01(\tR\x0edeactivated_by\x12B\n" +
	"\x0edeactivated_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x0edeactivated_at\"\xc9\x02\n" +
	"\x15RiskThresholdExceeded\x126\n" +
	"\x04meta\x18\x01 \x01(\v2\".proto.scg.shared.v1.EventEnvelopeR\x04meta\x12\x1c\n" +
	"\trisk_uuid\x18\x02 \x01(\tR\trisk_uuid\x12&\n" +
	"\x0erisk_rule_uuid\x18\x03 \x01(\tR\x0erisk_rule_uuid\x12&\n" +
	"\x0ethreshold_type\x18\x04 \x01(\tR\x0ethreshold_type\x12&\n" +
	"\x0eprevious_value\x18\x05 \x01(\tR\x0eprevious_value\x12$\n" +
	"\rcurrent_value\x18\x06 \x01(\tR\rcurrent_value\x12<\n" +
	"\vdetected_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\vdetected_at\"\x84\x02\n" +
	"\x0eRiskKPICreated\x126\n" +
	"\x04meta\x18\x01 \x01(\v2\".proto.scg.shared.v1.EventEnvelopeR\x04meta\x12$\n" +
	"\rrisk_kpi_uuid\x18\x02 \x01(\tR\rrisk_kpi_uuid\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12 \n" +
	"\vmetric_type\x18\x04 \x01(\tR\vmetric_type\x12\"\n" +
	"\ftarget_value\x18\x05 \x01(\x01R\ftarget_value\x12:\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"created_at\"\xd8\x02\n" +
	"\x0eRiskKPIUpdated\x126\n" +
	"\x04meta\x18\x01 \x01(\v2\".proto.scg.shared.v1.EventEnvelopeR\x04meta\x12$\n" +
	"\rrisk_kpi_uuid\x18\x02 \x01(\tR\rrisk_kpi_uuid\x12&\n" +
	"\x0eprevious_value\x18\x03 \x01(\x01R\x0eprevious_value\x12$\n" +
	"\rcurrent_value\x18\x04 \x01(\x01R\rcurrent_value\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x12F\n" +
	"\x10measurement_date\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x10measurement_date\x12:\n" +
	"\n" +
	"updated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"updated_atB\xd0\x01\n" +
	"\x15com.proto.scg.risk.v1B\vEventsProtoP\x01ZCgithub.com/next-trace/scg-contracts/gen/go/proto/scg/risk/v1;riskv1\xa2\x02\x03PSR\xaa\x02\x11Proto.Scg.Risk.V1\xca\x02\x11Proto\\Scg\\Risk\\V1\xe2\x02\x1dProto\\Scg\\Risk\\V1\\GPBMetadata\xea\x02\x14Proto::Scg::Risk::V1b\x06proto3"

var (
	file_proto_scg_risk_v1_events_proto_rawDescOnce sync.Once
	file_proto_scg_risk_v1_events_proto_rawDescData []byte
)

func file_proto_scg_risk_v1_events_proto_rawDescGZIP() []byte {
	file_proto_scg_risk_v1_events_proto_rawDescOnce.Do(func() {
		file_proto_scg_risk_v1_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_scg_risk_v1_events_proto_rawDesc), len(file_proto_scg_risk_v1_events_proto_rawDesc)))
	})
	return file_proto_scg_risk_v1_events_proto_rawDescData
}

var file_proto_scg_risk_v1_events_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_proto_scg_risk_v1_events_proto_goTypes = []any{
	(*RiskIdentified)(nil),                  // 0: proto.scg.risk.v1.RiskIdentified
	(*RiskAssessed)(nil),                    // 1: proto.scg.risk.v1.RiskAssessed
	(*RiskSeverityChanged)(nil),             // 2: proto.scg.risk.v1.RiskSeverityChanged
	(*RiskProbabilityChanged)(nil),          // 3: proto.scg.risk.v1.RiskProbabilityChanged
	(*RiskStatusChanged)(nil),               // 4: proto.scg.risk.v1.RiskStatusChanged
	(*RiskMitigated)(nil),                   // 5: proto.scg.risk.v1.RiskMitigated
	(*RiskAccepted)(nil),                    // 6: proto.scg.risk.v1.RiskAccepted
	(*RiskTransferred)(nil),                 // 7: proto.scg.risk.v1.RiskTransferred
	(*RiskMaterialized)(nil),                // 8: proto.scg.risk.v1.RiskMaterialized
	(*RiskMitigationPlanCreated)(nil),       // 9: proto.scg.risk.v1.RiskMitigationPlanCreated
	(*RiskMitigationPlanUpdated)(nil),       // 10: proto.scg.risk.v1.RiskMitigationPlanUpdated
	(*RiskMitigationPlanStatusChanged)(nil), // 11: proto.scg.risk.v1.RiskMitigationPlanStatusChanged
	(*RiskMitigationActionAdded)(nil),       // 12: proto.scg.risk.v1.RiskMitigationActionAdded
	(*RiskMitigationActionCompleted)(nil),   // 13: proto.scg.risk.v1.RiskMitigationActionCompleted
	(*RiskIncidentCreated)(nil),             // 14: proto.scg.risk.v1.RiskIncidentCreated
	(*RiskIncidentStatusChanged)(nil),       // 15: proto.scg.risk.v1.RiskIncidentStatusChanged
	(*RiskIncidentResolved)(nil),            // 16: proto.scg.risk.v1.RiskIncidentResolved
	(*RiskIncidentImpactUpdated)(nil),       // 17: proto.scg.risk.v1.RiskIncidentImpactUpdated
	(*RiskAssessmentCreated)(nil),           // 18: proto.scg.risk.v1.RiskAssessmentCreated
	(*RiskAssessmentCompleted)(nil),         // 19: proto.scg.risk.v1.RiskAssessmentCompleted
	(*RiskAssessmentApproved)(nil),          // 20: proto.scg.risk.v1.RiskAssessmentApproved
	(*RiskMonitoringRuleCreated)(nil),       // 21: proto.scg.risk.v1.RiskMonitoringRuleCreated
	(*RiskMonitoringRuleUpdated)(nil),       // 22: proto.scg.risk.v1.RiskMonitoringRuleUpdated
	(*RiskMonitoringRuleActivated)(nil),     // 23: proto.scg.risk.v1.RiskMonitoringRuleActivated
	(*RiskMonitoringRuleDeactivated)(nil),   // 24: proto.scg.risk.v1.RiskMonitoringRuleDeactivated
	(*RiskThresholdExceeded)(nil),           // 25: proto.scg.risk.v1.RiskThresholdExceeded
	(*RiskKPICreated)(nil),                  // 26: proto.scg.risk.v1.RiskKPICreated
	(*RiskKPIUpdated)(nil),                  // 27: proto.scg.risk.v1.RiskKPIUpdated
	nil,                                     // 28: proto.scg.risk.v1.RiskMitigationPlanUpdated.UpdatedFieldsEntry
	nil,                                     // 29: proto.scg.risk.v1.RiskMonitoringRuleUpdated.UpdatedFieldsEntry
	(*v1.EventEnvelope)(nil),                // 30: proto.scg.shared.v1.EventEnvelope
	(*timestamppb.Timestamp)(nil),           // 31: google.protobuf.Timestamp
}
var file_proto_scg_risk_v1_events_proto_depIdxs = []int32{
	30, // 0: proto.scg.risk.v1.RiskIdentified.meta:type_name -> proto.scg.shared.v1.EventEnvelope
	31, // 1: proto.scg.risk.v1.RiskIdentified.identified_at:type_name -> google.protobuf.Timestamp
	30, // 2: proto.scg.risk.v1.RiskAssessed.meta:type_name -> proto.scg.shared.v1.EventEnvelope
	31, // 3: proto.scg.risk.v1.RiskAssessed.assessed_at:type_name -> google.protobuf.Timestamp
	30, // 4: proto.scg.risk.v1.RiskSeverityChanged.meta:type_name -> proto.scg.shared.v1.EventEnvelope
	31, // 5: proto.scg.risk.v1.RiskSeverityChanged.changed_at:type_name -> google.protobuf.Timestamp
	30, // 6: proto.scg.risk.v1.RiskProbabilityChanged.meta:type_name -> proto.scg.shared.v1.EventEnvelope
	31, // 7: proto.scg.risk.v1.RiskProbabilityChanged.changed_at:type_name -> google.protobuf.Timestamp
	30, // 8: proto.scg.risk.v1.RiskStatusChanged.meta:type_name -> proto.scg.shared.v1.EventEnvelope
	31, // 9: proto.scg.risk.v1.RiskStatusChanged.changed_at:type_name -> google.protobuf.Timestamp
	30, // 10: proto.scg.risk.v1.RiskMitigated.meta:type_name -> proto.scg.shared.v1.EventEnvelope
	31, // 11: proto.scg.risk.v1.RiskMitigated.mitigated_at:type_name -> google.protobuf.Timestamp
	30, // 12: proto.scg.risk.v1.RiskAccepted.meta:type_name -> proto.scg.shared.v1.EventEnvelope
	31, // 13: proto.scg.risk.v1.RiskAccepted.accepted_at:type_name -> google.protobuf.Timestamp
	30, // 14: proto.scg.risk.v1.RiskTransferred.meta:type_name -> proto.scg.shared.v1.EventEnvelope
	31, // 15: proto.scg.risk.v1.RiskTransferred.transferred_at:type_name -> google.protobuf.Timestamp
	30, // 16: proto.scg.risk.v1.RiskMaterialized.meta:type_name -> proto.scg.shared.v1.EventEnvelope
	31, // 17: proto.scg.risk.v1.RiskMaterialized.materialized_at:type_name -> google.protobuf.Timestamp
	30, // 18: proto.scg.risk.v1.RiskMitigationPlanCreated.meta:type_name -> proto.scg.shared.v1.EventEnvelope
	31, // 19: proto.scg.risk.v1.RiskMitigationPlanCreated.start_date:type_name -> google.protobuf.Timestamp
	31, // 20: proto.scg.risk.v1.RiskMitigationPlanCreated.target_completion_date:type_name -> google.protobuf.Timestamp
	31, // 21: proto.scg.risk.v1.RiskMitigationPlanCreated.created_at:type_name -> google.protobuf.Timestamp
	30, // 22: proto.scg.risk.v1.RiskMitigationPlanUpdated.meta:type_name -> proto.scg.shared.v1.EventEnvelope
	28, // 23: proto.scg.risk.v1.RiskMitigationPlanUpdated.updated_fields:type_name -> proto.scg.risk.v1.RiskMitigationPlanUpdated.UpdatedFieldsEntry
	31, // 24: proto.scg.risk.v1.RiskMitigationPlanUpdated.updated_at:type_name -> google.protobuf.Timestamp
	30, // 25: proto.scg.risk.v1.RiskMitigationPlanStatusChanged.meta:type_name -> proto.scg.shared.v1.EventEnvelope
	31, // 26: proto.scg.risk.v1.RiskMitigationPlanStatusChanged.changed_at:type_name -> google.protobuf.Timestamp
	30, // 27: proto.scg.risk.v1.RiskMitigationActionAdded.meta:type_name -> proto.scg.shared.v1.EventEnvelope
	31, // 28: proto.scg.risk.v1.RiskMitigationActionAdded.due_date:type_name -> google.protobuf.Timestamp
	31, // 29: proto.scg.risk.v1.RiskMitigationActionAdded.added_at:type_name -> google.protobuf.Timestamp
	30, // 30: proto.scg.risk.v1.RiskMitigationActionCompleted.meta:type_name -> proto.scg.shared.v1.EventEnvelope
	31, // 31: proto.scg.risk.v1.RiskMitigationActionCompleted.completed_at:type_name -> google.protobuf.Timestamp
	30, // 32: proto.scg.risk.v1.RiskIncidentCreated.meta:type_name -> proto.scg.shared.v1.EventEnvelope
	31, // 33: proto.scg.risk.v1.RiskIncidentCreated.occurred_at:type_name -> google.protobuf.Timestamp
	31, // 34: proto.scg.risk.v1.RiskIncidentCreated.detected_at:type_name -> google.protobuf.Timestamp
	31, // 35: proto.scg.risk.v1.RiskIncidentCreated.created_at:type_name -> google.protobuf.Timestamp
	30, // 36: proto.scg.risk.v1.RiskIncidentStatusChanged.meta:type_name -> proto.scg.shared.v1.EventEnvelope
	31, // 37: proto.scg.risk.v1.RiskIncidentStatusChanged.changed_at:type_name -> google.protobuf.Timestamp
	30, // 38: proto.scg.risk.v1.RiskIncidentResolved.meta:type_name -> proto.scg.shared.v1.EventEnvelope
	31, // 39: proto.scg.risk.v1.RiskIncidentResolved.resolved_at:type_name -> google.protobuf.Timestamp
	30, // 40: proto.scg.risk.v1.RiskIncidentImpactUpdated.meta:type_name -> proto.scg.shared.v1.EventEnvelope
	31, // 41: proto.scg.risk.v1.RiskIncidentImpactUpdated.updated_at:type_name -> google.protobuf.Timestamp
	30, // 42: proto.scg.risk.v1.RiskAssessmentCreated.meta:type_name -> proto.scg.shared.v1.EventEnvelope
	31, // 43: proto.scg.risk.v1.RiskAssessmentCreated.assessment_date:type_name -> google.protobuf.Timestamp
	31, // 44: proto.scg.risk.v1.RiskAssessmentCreated.created_at:type_name -> google.protobuf.Timestamp
	30, // 45: proto.scg.risk.v1.RiskAssessmentCompleted.meta:type_name -> proto.scg.shared.v1.EventEnvelope
	31, // 46: proto.scg.risk.v1.RiskAssessmentCompleted.completed_at:type_name -> google.protobuf.Timestamp
	30, // 47: proto.scg.risk.v1.RiskAssessmentApproved.meta:type_name -> proto.scg.shared.v1.EventEnvelope
	31, // 48: proto.scg.risk.v1.RiskAssessmentApproved.approved_at:type_name -> google.protobuf.Timestamp
	30, // 49: proto.scg.risk.v1.RiskMonitoringRuleCreated.meta:type_name -> proto.scg.shared.v1.EventEnvelope
	31, // 50: proto.scg.risk.v1.RiskMonitoringRuleCreated.created_at:type_name -> google.protobuf.Timestamp
	30, // 51: proto.scg.risk.v1.RiskMonitoringRuleUpdated.meta:type_name -> proto.scg.shared.v1.EventEnvelope
	29, // 52: proto.scg.risk.v1.RiskMonitoringRuleUpdated.updated_fields:type_name -> proto.scg.risk.v1.RiskMonitoringRuleUpdated.UpdatedFieldsEntry
	31, // 53: proto.scg.risk.v1.RiskMonitoringRuleUpdated.updated_at:type_name -> google.protobuf.Timestamp
	30, // 54: proto.scg.risk.v1.RiskMonitoringRuleActivated.meta:type_name -> proto.scg.shared.v1.EventEnvelope
	31, // 55: proto.scg.risk.v1.RiskMonitoringRuleActivated.activated_at:type_name -> google.protobuf.Timestamp
	30, // 56: proto.scg.risk.v1.RiskMonitoringRuleDeactivated.meta:type_name -> proto.scg.shared.v1.EventEnvelope
	31, // 57: proto.scg.risk.v1.RiskMonitoringRuleDeactivated.deactivated_at:type_name -> google.protobuf.Timestamp
	30, // 58: proto.scg.risk.v1.RiskThresholdExceeded.meta:type_name -> proto.scg.shared.v1.EventEnvelope
	31, // 59: proto.scg.risk.v1.RiskThresholdExceeded.detected_at:type_name -> google.protobuf.Timestamp
	30, // 60: proto.scg.risk.v1.RiskKPICreated.meta:type_name -> proto.scg.shared.v1.EventEnvelope
	31, // 61: proto.scg.risk.v1.RiskKPICreated.created_at:type_name -> google.protobuf.Timestamp
	30, // 62: proto.scg.risk.v1.RiskKPIUpdated.meta:type_name -> proto.scg.shared.v1.EventEnvelope
	31, // 63: proto.scg.risk.v1.RiskKPIUpdated.measurement_date:type_name -> google.protobuf.Timestamp
	31, // 64: proto.scg.risk.v1.RiskKPIUpdated.updated_at:type_name -> google.protobuf.Timestamp
	65, // [65:65] is the sub-list for method output_type
	65, // [65:65] is the sub-list for method input_type
	65, // [65:65] is the sub-list for extension type_name
	65, // [65:65] is the sub-list for extension extendee
	0,  // [0:65] is the sub-list for field type_name
}

func init() { file_proto_scg_risk_v1_events_proto_init() }
func file_proto_scg_risk_v1_events_proto_init() {
	if File_proto_scg_risk_v1_events_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_scg_risk_v1_events_proto_rawDesc), len(file_proto_scg_risk_v1_events_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_scg_risk_v1_events_proto_goTypes,
		DependencyIndexes: file_proto_scg_risk_v1_events_proto_depIdxs,
		MessageInfos:      file_proto_scg_risk_v1_events_proto_msgTypes,
	}.Build()
	File_proto_scg_risk_v1_events_proto = out.File
	file_proto_scg_risk_v1_events_proto_goTypes = nil
	file_proto_scg_risk_v1_events_proto_depIdxs = nil
}
