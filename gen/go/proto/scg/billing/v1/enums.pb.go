// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/scg/billing/v1/enums.proto

package billingv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// InvoiceStatus represents the status of an invoice
type InvoiceStatus int32

const (
	InvoiceStatus_INVOICE_STATUS_UNSPECIFIED    InvoiceStatus = 0
	InvoiceStatus_INVOICE_STATUS_DRAFT          InvoiceStatus = 1 // Invoice is in draft state
	InvoiceStatus_INVOICE_STATUS_ISSUED         InvoiceStatus = 2 // Invoice has been issued to the customer
	InvoiceStatus_INVOICE_STATUS_PAID           InvoiceStatus = 3 // Invoice has been paid in full
	InvoiceStatus_INVOICE_STATUS_PARTIALLY_PAID InvoiceStatus = 4 // Invoice has been partially paid
	InvoiceStatus_INVOICE_STATUS_OVERDUE        InvoiceStatus = 5 // Invoice is past due date
	InvoiceStatus_INVOICE_STATUS_CANCELLED      InvoiceStatus = 6 // Invoice has been cancelled
	InvoiceStatus_INVOICE_STATUS_VOID           InvoiceStatus = 7 // Invoice has been voided
)

// Enum value maps for InvoiceStatus.
var (
	InvoiceStatus_name = map[int32]string{
		0: "INVOICE_STATUS_UNSPECIFIED",
		1: "INVOICE_STATUS_DRAFT",
		2: "INVOICE_STATUS_ISSUED",
		3: "INVOICE_STATUS_PAID",
		4: "INVOICE_STATUS_PARTIALLY_PAID",
		5: "INVOICE_STATUS_OVERDUE",
		6: "INVOICE_STATUS_CANCELLED",
		7: "INVOICE_STATUS_VOID",
	}
	InvoiceStatus_value = map[string]int32{
		"INVOICE_STATUS_UNSPECIFIED":    0,
		"INVOICE_STATUS_DRAFT":          1,
		"INVOICE_STATUS_ISSUED":         2,
		"INVOICE_STATUS_PAID":           3,
		"INVOICE_STATUS_PARTIALLY_PAID": 4,
		"INVOICE_STATUS_OVERDUE":        5,
		"INVOICE_STATUS_CANCELLED":      6,
		"INVOICE_STATUS_VOID":           7,
	}
)

func (x InvoiceStatus) Enum() *InvoiceStatus {
	p := new(InvoiceStatus)
	*p = x
	return p
}

func (x InvoiceStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InvoiceStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scg_billing_v1_enums_proto_enumTypes[0].Descriptor()
}

func (InvoiceStatus) Type() protoreflect.EnumType {
	return &file_proto_scg_billing_v1_enums_proto_enumTypes[0]
}

func (x InvoiceStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InvoiceStatus.Descriptor instead.
func (InvoiceStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_scg_billing_v1_enums_proto_rawDescGZIP(), []int{0}
}

// PaymentStatus represents the status of a payment
type PaymentStatus int32

const (
	PaymentStatus_PAYMENT_STATUS_UNSPECIFIED        PaymentStatus = 0
	PaymentStatus_PAYMENT_STATUS_PENDING            PaymentStatus = 1 // Payment is pending processing
	PaymentStatus_PAYMENT_STATUS_PROCESSING         PaymentStatus = 2 // Payment is being processed
	PaymentStatus_PAYMENT_STATUS_COMPLETED          PaymentStatus = 3 // Payment has been completed successfully
	PaymentStatus_PAYMENT_STATUS_FAILED             PaymentStatus = 4 // Payment has failed
	PaymentStatus_PAYMENT_STATUS_REFUNDED           PaymentStatus = 5 // Payment has been refunded
	PaymentStatus_PAYMENT_STATUS_PARTIALLY_REFUNDED PaymentStatus = 6 // Payment has been partially refunded
	PaymentStatus_PAYMENT_STATUS_CANCELLED          PaymentStatus = 7 // Payment has been cancelled
)

// Enum value maps for PaymentStatus.
var (
	PaymentStatus_name = map[int32]string{
		0: "PAYMENT_STATUS_UNSPECIFIED",
		1: "PAYMENT_STATUS_PENDING",
		2: "PAYMENT_STATUS_PROCESSING",
		3: "PAYMENT_STATUS_COMPLETED",
		4: "PAYMENT_STATUS_FAILED",
		5: "PAYMENT_STATUS_REFUNDED",
		6: "PAYMENT_STATUS_PARTIALLY_REFUNDED",
		7: "PAYMENT_STATUS_CANCELLED",
	}
	PaymentStatus_value = map[string]int32{
		"PAYMENT_STATUS_UNSPECIFIED":        0,
		"PAYMENT_STATUS_PENDING":            1,
		"PAYMENT_STATUS_PROCESSING":         2,
		"PAYMENT_STATUS_COMPLETED":          3,
		"PAYMENT_STATUS_FAILED":             4,
		"PAYMENT_STATUS_REFUNDED":           5,
		"PAYMENT_STATUS_PARTIALLY_REFUNDED": 6,
		"PAYMENT_STATUS_CANCELLED":          7,
	}
)

func (x PaymentStatus) Enum() *PaymentStatus {
	p := new(PaymentStatus)
	*p = x
	return p
}

func (x PaymentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scg_billing_v1_enums_proto_enumTypes[1].Descriptor()
}

func (PaymentStatus) Type() protoreflect.EnumType {
	return &file_proto_scg_billing_v1_enums_proto_enumTypes[1]
}

func (x PaymentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentStatus.Descriptor instead.
func (PaymentStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_scg_billing_v1_enums_proto_rawDescGZIP(), []int{1}
}

// PaymentMethod represents different methods of payment
type PaymentMethod int32

const (
	PaymentMethod_PAYMENT_METHOD_UNSPECIFIED    PaymentMethod = 0
	PaymentMethod_PAYMENT_METHOD_CREDIT_CARD    PaymentMethod = 1 // Credit card payment
	PaymentMethod_PAYMENT_METHOD_BANK_TRANSFER  PaymentMethod = 2 // Bank transfer payment
	PaymentMethod_PAYMENT_METHOD_DIGITAL_WALLET PaymentMethod = 3 // Digital wallet payment (e.g., PayPal)
	PaymentMethod_PAYMENT_METHOD_CHECK          PaymentMethod = 4 // Check payment
	PaymentMethod_PAYMENT_METHOD_CASH           PaymentMethod = 5 // Cash payment
	PaymentMethod_PAYMENT_METHOD_CRYPTO         PaymentMethod = 6 // Cryptocurrency payment
	PaymentMethod_PAYMENT_METHOD_CREDIT         PaymentMethod = 7 // Payment using account credit
)

// Enum value maps for PaymentMethod.
var (
	PaymentMethod_name = map[int32]string{
		0: "PAYMENT_METHOD_UNSPECIFIED",
		1: "PAYMENT_METHOD_CREDIT_CARD",
		2: "PAYMENT_METHOD_BANK_TRANSFER",
		3: "PAYMENT_METHOD_DIGITAL_WALLET",
		4: "PAYMENT_METHOD_CHECK",
		5: "PAYMENT_METHOD_CASH",
		6: "PAYMENT_METHOD_CRYPTO",
		7: "PAYMENT_METHOD_CREDIT",
	}
	PaymentMethod_value = map[string]int32{
		"PAYMENT_METHOD_UNSPECIFIED":    0,
		"PAYMENT_METHOD_CREDIT_CARD":    1,
		"PAYMENT_METHOD_BANK_TRANSFER":  2,
		"PAYMENT_METHOD_DIGITAL_WALLET": 3,
		"PAYMENT_METHOD_CHECK":          4,
		"PAYMENT_METHOD_CASH":           5,
		"PAYMENT_METHOD_CRYPTO":         6,
		"PAYMENT_METHOD_CREDIT":         7,
	}
)

func (x PaymentMethod) Enum() *PaymentMethod {
	p := new(PaymentMethod)
	*p = x
	return p
}

func (x PaymentMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scg_billing_v1_enums_proto_enumTypes[2].Descriptor()
}

func (PaymentMethod) Type() protoreflect.EnumType {
	return &file_proto_scg_billing_v1_enums_proto_enumTypes[2]
}

func (x PaymentMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentMethod.Descriptor instead.
func (PaymentMethod) EnumDescriptor() ([]byte, []int) {
	return file_proto_scg_billing_v1_enums_proto_rawDescGZIP(), []int{2}
}

// BillingCycle represents different billing cycle periods
type BillingCycle int32

const (
	BillingCycle_BILLING_CYCLE_UNSPECIFIED BillingCycle = 0
	BillingCycle_BILLING_CYCLE_DAILY       BillingCycle = 1 // Daily billing
	BillingCycle_BILLING_CYCLE_WEEKLY      BillingCycle = 2 // Weekly billing
	BillingCycle_BILLING_CYCLE_BIWEEKLY    BillingCycle = 3 // Bi-weekly billing
	BillingCycle_BILLING_CYCLE_MONTHLY     BillingCycle = 4 // Monthly billing
	BillingCycle_BILLING_CYCLE_QUARTERLY   BillingCycle = 5 // Quarterly billing
	BillingCycle_BILLING_CYCLE_SEMIANNUAL  BillingCycle = 6 // Semi-annual billing
	BillingCycle_BILLING_CYCLE_ANNUAL      BillingCycle = 7 // Annual billing
	BillingCycle_BILLING_CYCLE_CUSTOM      BillingCycle = 8 // Custom billing cycle
)

// Enum value maps for BillingCycle.
var (
	BillingCycle_name = map[int32]string{
		0: "BILLING_CYCLE_UNSPECIFIED",
		1: "BILLING_CYCLE_DAILY",
		2: "BILLING_CYCLE_WEEKLY",
		3: "BILLING_CYCLE_BIWEEKLY",
		4: "BILLING_CYCLE_MONTHLY",
		5: "BILLING_CYCLE_QUARTERLY",
		6: "BILLING_CYCLE_SEMIANNUAL",
		7: "BILLING_CYCLE_ANNUAL",
		8: "BILLING_CYCLE_CUSTOM",
	}
	BillingCycle_value = map[string]int32{
		"BILLING_CYCLE_UNSPECIFIED": 0,
		"BILLING_CYCLE_DAILY":       1,
		"BILLING_CYCLE_WEEKLY":      2,
		"BILLING_CYCLE_BIWEEKLY":    3,
		"BILLING_CYCLE_MONTHLY":     4,
		"BILLING_CYCLE_QUARTERLY":   5,
		"BILLING_CYCLE_SEMIANNUAL":  6,
		"BILLING_CYCLE_ANNUAL":      7,
		"BILLING_CYCLE_CUSTOM":      8,
	}
)

func (x BillingCycle) Enum() *BillingCycle {
	p := new(BillingCycle)
	*p = x
	return p
}

func (x BillingCycle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BillingCycle) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scg_billing_v1_enums_proto_enumTypes[3].Descriptor()
}

func (BillingCycle) Type() protoreflect.EnumType {
	return &file_proto_scg_billing_v1_enums_proto_enumTypes[3]
}

func (x BillingCycle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BillingCycle.Descriptor instead.
func (BillingCycle) EnumDescriptor() ([]byte, []int) {
	return file_proto_scg_billing_v1_enums_proto_rawDescGZIP(), []int{3}
}

// DiscountType represents different types of discounts
type DiscountType int32

const (
	DiscountType_DISCOUNT_TYPE_UNSPECIFIED  DiscountType = 0
	DiscountType_DISCOUNT_TYPE_PERCENTAGE   DiscountType = 1 // Percentage-based discount
	DiscountType_DISCOUNT_TYPE_FIXED_AMOUNT DiscountType = 2 // Fixed amount discount
	DiscountType_DISCOUNT_TYPE_FREE_ITEM    DiscountType = 3 // Free item discount
	DiscountType_DISCOUNT_TYPE_VOLUME       DiscountType = 4 // Volume-based discount
	DiscountType_DISCOUNT_TYPE_LOYALTY      DiscountType = 5 // Loyalty program discount
)

// Enum value maps for DiscountType.
var (
	DiscountType_name = map[int32]string{
		0: "DISCOUNT_TYPE_UNSPECIFIED",
		1: "DISCOUNT_TYPE_PERCENTAGE",
		2: "DISCOUNT_TYPE_FIXED_AMOUNT",
		3: "DISCOUNT_TYPE_FREE_ITEM",
		4: "DISCOUNT_TYPE_VOLUME",
		5: "DISCOUNT_TYPE_LOYALTY",
	}
	DiscountType_value = map[string]int32{
		"DISCOUNT_TYPE_UNSPECIFIED":  0,
		"DISCOUNT_TYPE_PERCENTAGE":   1,
		"DISCOUNT_TYPE_FIXED_AMOUNT": 2,
		"DISCOUNT_TYPE_FREE_ITEM":    3,
		"DISCOUNT_TYPE_VOLUME":       4,
		"DISCOUNT_TYPE_LOYALTY":      5,
	}
)

func (x DiscountType) Enum() *DiscountType {
	p := new(DiscountType)
	*p = x
	return p
}

func (x DiscountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiscountType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scg_billing_v1_enums_proto_enumTypes[4].Descriptor()
}

func (DiscountType) Type() protoreflect.EnumType {
	return &file_proto_scg_billing_v1_enums_proto_enumTypes[4]
}

func (x DiscountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiscountType.Descriptor instead.
func (DiscountType) EnumDescriptor() ([]byte, []int) {
	return file_proto_scg_billing_v1_enums_proto_rawDescGZIP(), []int{4}
}

// TaxType represents different types of taxes
type TaxType int32

const (
	TaxType_TAX_TYPE_UNSPECIFIED TaxType = 0
	TaxType_TAX_TYPE_SALES_TAX   TaxType = 1 // Sales tax
	TaxType_TAX_TYPE_VAT         TaxType = 2 // Value Added Tax
	TaxType_TAX_TYPE_GST         TaxType = 3 // Goods and Services Tax
	TaxType_TAX_TYPE_EXCISE      TaxType = 4 // Excise tax
	TaxType_TAX_TYPE_CUSTOMS     TaxType = 5 // Customs duty
	TaxType_TAX_TYPE_WITHHOLDING TaxType = 6 // Withholding tax
)

// Enum value maps for TaxType.
var (
	TaxType_name = map[int32]string{
		0: "TAX_TYPE_UNSPECIFIED",
		1: "TAX_TYPE_SALES_TAX",
		2: "TAX_TYPE_VAT",
		3: "TAX_TYPE_GST",
		4: "TAX_TYPE_EXCISE",
		5: "TAX_TYPE_CUSTOMS",
		6: "TAX_TYPE_WITHHOLDING",
	}
	TaxType_value = map[string]int32{
		"TAX_TYPE_UNSPECIFIED": 0,
		"TAX_TYPE_SALES_TAX":   1,
		"TAX_TYPE_VAT":         2,
		"TAX_TYPE_GST":         3,
		"TAX_TYPE_EXCISE":      4,
		"TAX_TYPE_CUSTOMS":     5,
		"TAX_TYPE_WITHHOLDING": 6,
	}
)

func (x TaxType) Enum() *TaxType {
	p := new(TaxType)
	*p = x
	return p
}

func (x TaxType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaxType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scg_billing_v1_enums_proto_enumTypes[5].Descriptor()
}

func (TaxType) Type() protoreflect.EnumType {
	return &file_proto_scg_billing_v1_enums_proto_enumTypes[5]
}

func (x TaxType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaxType.Descriptor instead.
func (TaxType) EnumDescriptor() ([]byte, []int) {
	return file_proto_scg_billing_v1_enums_proto_rawDescGZIP(), []int{5}
}

var File_proto_scg_billing_v1_enums_proto protoreflect.FileDescriptor

const file_proto_scg_billing_v1_enums_proto_rawDesc = "" +
	"\n" +
	" proto/scg/billing/v1/enums.proto\x12\x14proto.scg.billing.v1*\xf3\x01\n" +
	"\rInvoiceStatus\x12\x1e\n" +
	"\x1aINVOICE_STATUS_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14INVOICE_STATUS_DRAFT\x10\x01\x12\x19\n" +
	"\x15INVOICE_STATUS_ISSUED\x10\x02\x12\x17\n" +
	"\x13INVOICE_STATUS_PAID\x10\x03\x12!\n" +
	"\x1dINVOICE_STATUS_PARTIALLY_PAID\x10\x04\x12\x1a\n" +
	"\x16INVOICE_STATUS_OVERDUE\x10\x05\x12\x1c\n" +
	"\x18INVOICE_STATUS_CANCELLED\x10\x06\x12\x17\n" +
	"\x13INVOICE_STATUS_VOID\x10\a*\x85\x02\n" +
	"\rPaymentStatus\x12\x1e\n" +
	"\x1aPAYMENT_STATUS_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16PAYMENT_STATUS_PENDING\x10\x01\x12\x1d\n" +
	"\x19PAYMENT_STATUS_PROCESSING\x10\x02\x12\x1c\n" +
	"\x18PAYMENT_STATUS_COMPLETED\x10\x03\x12\x19\n" +
	"\x15PAYMENT_STATUS_FAILED\x10\x04\x12\x1b\n" +
	"\x17PAYMENT_STATUS_REFUNDED\x10\x05\x12%\n" +
	"!PAYMENT_STATUS_PARTIALLY_REFUNDED\x10\x06\x12\x1c\n" +
	"\x18PAYMENT_STATUS_CANCELLED\x10\a*\xfd\x01\n" +
	"\rPaymentMethod\x12\x1e\n" +
	"\x1aPAYMENT_METHOD_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aPAYMENT_METHOD_CREDIT_CARD\x10\x01\x12 \n" +
	"\x1cPAYMENT_METHOD_BANK_TRANSFER\x10\x02\x12!\n" +
	"\x1dPAYMENT_METHOD_DIGITAL_WALLET\x10\x03\x12\x18\n" +
	"\x14PAYMENT_METHOD_CHECK\x10\x04\x12\x17\n" +
	"\x13PAYMENT_METHOD_CASH\x10\x05\x12\x19\n" +
	"\x15PAYMENT_METHOD_CRYPTO\x10\x06\x12\x19\n" +
	"\x15PAYMENT_METHOD_CREDIT\x10\a*\x86\x02\n" +
	"\fBillingCycle\x12\x1d\n" +
	"\x19BILLING_CYCLE_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13BILLING_CYCLE_DAILY\x10\x01\x12\x18\n" +
	"\x14BILLING_CYCLE_WEEKLY\x10\x02\x12\x1a\n" +
	"\x16BILLING_CYCLE_BIWEEKLY\x10\x03\x12\x19\n" +
	"\x15BILLING_CYCLE_MONTHLY\x10\x04\x12\x1b\n" +
	"\x17BILLING_CYCLE_QUARTERLY\x10\x05\x12\x1c\n" +
	"\x18BILLING_CYCLE_SEMIANNUAL\x10\x06\x12\x18\n" +
	"\x14BILLING_CYCLE_ANNUAL\x10\a\x12\x18\n" +
	"\x14BILLING_CYCLE_CUSTOM\x10\b*\xbd\x01\n" +
	"\fDiscountType\x12\x1d\n" +
	"\x19DISCOUNT_TYPE_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18DISCOUNT_TYPE_PERCENTAGE\x10\x01\x12\x1e\n" +
	"\x1aDISCOUNT_TYPE_FIXED_AMOUNT\x10\x02\x12\x1b\n" +
	"\x17DISCOUNT_TYPE_FREE_ITEM\x10\x03\x12\x18\n" +
	"\x14DISCOUNT_TYPE_VOLUME\x10\x04\x12\x19\n" +
	"\x15DISCOUNT_TYPE_LOYALTY\x10\x05*\xa4\x01\n" +
	"\aTaxType\x12\x18\n" +
	"\x14TAX_TYPE_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12TAX_TYPE_SALES_TAX\x10\x01\x12\x10\n" +
	"\fTAX_TYPE_VAT\x10\x02\x12\x10\n" +
	"\fTAX_TYPE_GST\x10\x03\x12\x13\n" +
	"\x0fTAX_TYPE_EXCISE\x10\x04\x12\x14\n" +
	"\x10TAX_TYPE_CUSTOMS\x10\x05\x12\x18\n" +
	"\x14TAX_TYPE_WITHHOLDING\x10\x06B\xe4\x01\n" +
	"\x18com.proto.scg.billing.v1B\n" +
	"EnumsProtoP\x01ZIgithub.com/next-trace/scg-contracts/gen/go/proto/scg/billing/v1;billingv1\xa2\x02\x03PSB\xaa\x02\x14Proto.Scg.Billing.V1\xca\x02\x14Proto\\Scg\\Billing\\V1\xe2\x02 Proto\\Scg\\Billing\\V1\\GPBMetadata\xea\x02\x17Proto::Scg::Billing::V1b\x06proto3"

var (
	file_proto_scg_billing_v1_enums_proto_rawDescOnce sync.Once
	file_proto_scg_billing_v1_enums_proto_rawDescData []byte
)

func file_proto_scg_billing_v1_enums_proto_rawDescGZIP() []byte {
	file_proto_scg_billing_v1_enums_proto_rawDescOnce.Do(func() {
		file_proto_scg_billing_v1_enums_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_scg_billing_v1_enums_proto_rawDesc), len(file_proto_scg_billing_v1_enums_proto_rawDesc)))
	})
	return file_proto_scg_billing_v1_enums_proto_rawDescData
}

var file_proto_scg_billing_v1_enums_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_proto_scg_billing_v1_enums_proto_goTypes = []any{
	(InvoiceStatus)(0), // 0: proto.scg.billing.v1.InvoiceStatus
	(PaymentStatus)(0), // 1: proto.scg.billing.v1.PaymentStatus
	(PaymentMethod)(0), // 2: proto.scg.billing.v1.PaymentMethod
	(BillingCycle)(0),  // 3: proto.scg.billing.v1.BillingCycle
	(DiscountType)(0),  // 4: proto.scg.billing.v1.DiscountType
	(TaxType)(0),       // 5: proto.scg.billing.v1.TaxType
}
var file_proto_scg_billing_v1_enums_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_scg_billing_v1_enums_proto_init() }
func file_proto_scg_billing_v1_enums_proto_init() {
	if File_proto_scg_billing_v1_enums_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_scg_billing_v1_enums_proto_rawDesc), len(file_proto_scg_billing_v1_enums_proto_rawDesc)),
			NumEnums:      6,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_scg_billing_v1_enums_proto_goTypes,
		DependencyIndexes: file_proto_scg_billing_v1_enums_proto_depIdxs,
		EnumInfos:         file_proto_scg_billing_v1_enums_proto_enumTypes,
	}.Build()
	File_proto_scg_billing_v1_enums_proto = out.File
	file_proto_scg_billing_v1_enums_proto_goTypes = nil
	file_proto_scg_billing_v1_enums_proto_depIdxs = nil
}
